{
  "d510bb22-641a-4717-a916-0e9eeb50b470": {
    "job_id": "d510bb22-641a-4717-a916-0e9eeb50b470",
    "status": "failed",
    "created_at": "2025-07-12T17:09:32.092509",
    "pdf_source": "uploads/ab374ecc-17e7-4316-b1f2-7e400f5dbd9f_2507.07980v1.pdf",
    "original_filename": "2507.07980v1.pdf",
    "video_name": null,
    "error": "Error code: 400 - {'type': 'error', 'error': {'type': 'invalid_request_error', 'message': 'An unexpected error occurred. Please try again later.'}}"
  },
  "62793b6a-b4a9-44bd-be3e-8d89d1c2d56c": {
    "job_id": "62793b6a-b4a9-44bd-be3e-8d89d1c2d56c",
    "status": "completed",
    "created_at": "2025-07-12T17:14:57.583890",
    "pdf_source": "https://arxiv.org/pdf/2507.07980",
    "quality": "medium_quality",
    "video_name": null,
    "completed_at": "2025-07-12T17:15:31.514120",
    "video_path": "outputs/video_62793b6a-b4a9-44bd-be3e-8d89d1c2d56c.mp4",
    "generation_metrics": {
      "video_path": "outputs/video_62793b6a-b4a9-44bd-be3e-8d89d1c2d56c.mp4",
      "total_clips": 4,
      "successful_clips": 4,
      "failed_clips": 0,
      "success_rate": 1.0,
      "pdf_url": "https://arxiv.org/pdf/2507.07980",
      "clips_config": [
        {
          "type": "manim",
          "code": "class Scene1(Scene):\n    def construct(self):\n        robot = Rectangle(height=2, width=1, color=YELLOW)\n        touch = Dot(color=RED)\n        sensor = Text('Tactile Sensors: $1000+').scale(0.5)\n        x = Text('X').scale(2)\n        self.play(Create(robot))\n        self.play(Create(touch), Write(sensor))\n        self.play(Create(x), FadeOut(sensor))\n        self.play(Write(Text('What if robots could feel touch...without sensors?').scale(0.7)))",
          "voice_over": "Robots need to feel touch to interact naturally with humans. But adding touch sensors is expensive and complex. What if there was a better way?"
        },
        {
          "type": "manim",
          "code": "class Scene2(Scene):\n    def construct(self):\n        robot = Rectangle(height=2, width=1, color=YELLOW)\n        joints = [Dot(color=BLUE) for _ in range(3)]\n        arrows = [Arrow(joints[i], joints[i+1], color=WHITE) for i in range(2)]\n        brain = Circle(color=GREEN).scale(0.5).next_to(robot, UP)\n        self.play(Create(robot), *[Create(j) for j in joints], *[Create(a) for a in arrows])\n        self.play(Create(brain), Write(Text('Joint Sensors \u2192 Touch Location').scale(0.6)))",
          "voice_over": "UniTac uses the robot's existing joint sensors to detect touch. Like how you can tell where something touches your arm just by feeling how your muscles and joints react."
        },
        {
          "type": "manim",
          "code": "class Scene3(Scene):\n    def construct(self):\n        neural = Rectangle(width=3, height=2, color=PURPLE)\n        data = [Dot(color=BLUE) for _ in range(6)]\n        output = Dot(color=RED)\n        arrows = [Arrow(d, output, color=WHITE) for d in data]\n        self.play(Create(neural), *[Create(d) for d in data])\n        self.play(*[Create(a) for a in arrows], Create(output))\n        self.play(Write(Text('7-8cm accuracy').scale(0.6).next_to(neural, DOWN)))",
          "voice_over": "A neural network learns patterns in joint sensor data to pinpoint touch location within 7-8 centimeters - all without any additional hardware."
        },
        {
          "type": "manim",
          "code": "class Scene4(Scene):\n    def construct(self):\n        robot = Rectangle(height=2, width=1, color=YELLOW)\n        human = Circle(color=BLUE).shift(LEFT*2)\n        touch = Dot(color=RED)\n        arrow = Arrow(human, robot)\n        text = Text('Natural Interaction').scale(0.7)\n        self.play(Create(robot), Create(human))\n        self.play(Create(arrow), Create(touch))\n        self.play(Write(text))",
          "voice_over": "This breakthrough makes human-robot interaction more natural and accessible - enabling robots to respond to touch just like animals do, at a fraction of the cost."
        }
      ]
    }
  },
  "5301b217-c8b2-44c6-9620-0c754ac03726": {
    "job_id": "5301b217-c8b2-44c6-9620-0c754ac03726",
    "status": "completed",
    "created_at": "2025-07-12T17:20:33.221322",
    "pdf_source": "uploads/2d324437-daeb-44c6-a1c3-b90d9cf7a635_2507.07980v1.pdf",
    "original_filename": "2507.07980v1.pdf",
    "video_name": null,
    "completed_at": "2025-07-12T17:21:17.627788",
    "video_path": "outputs/video_5301b217-c8b2-44c6-9620-0c754ac03726.mp4",
    "generation_metrics": {
      "video_path": "outputs/video_5301b217-c8b2-44c6-9620-0c754ac03726.mp4",
      "total_clips": 4,
      "successful_clips": 4,
      "failed_clips": 0,
      "success_rate": 1.0,
      "pdf_path": "uploads/2d324437-daeb-44c6-a1c3-b90d9cf7a635_2507.07980v1.pdf",
      "clips_config": [
        {
          "type": "manim",
          "code": "class Scene1(Scene):\n    def construct(self):\n        robot = Square(color=YELLOW).scale(1.5)\n        sensor = Text('NO TOUCH\\nSENSORS', font_size=24).set_color(RED)\n        cross = Cross(sensor)\n        joint = Circle(color=WHITE, radius=0.3).next_to(robot, DOWN)\n        arrow = Arrow(joint, robot, color=BLUE)\n\n        self.play(Create(robot))\n        self.play(Write(sensor))\n        self.play(Create(cross))\n        self.play(Create(joint), Create(arrow))",
          "voice_over": "Modern robots can walk, run and manipulate objects with incredible precision. But there's a major limitation - most can't feel touch because they lack expensive tactile sensors. What if we could give robots a sense of touch using only the sensors they already have?"
        },
        {
          "type": "manim",
          "code": "class Scene2(Scene):\n    def construct(self):\n        joint = Circle(color=WHITE).scale(0.5)\n        waves = [Line(start=joint.get_center(), end=joint.get_center() + RIGHT*i/2 + UP*np.sin(i/2), color=BLUE) for i in range(1,8)]\n        hand = Circle(color=YELLOW).scale(0.3).move_to(waves[-1].get_end())\n        equation = Text('Joint Data \u2192 Touch Location', font_size=36)\n\n        self.play(Create(joint))\n        for wave in waves:\n            self.play(Create(wave), run_time=0.2)\n        self.play(Create(hand))\n        self.play(Write(equation))",
          "voice_over": "UniTac's key insight is that when you touch a robot, its joint sensors detect subtle changes in position and torque. By analyzing these patterns, we can figure out exactly where the robot was touched - no special sensors needed."
        },
        {
          "type": "manim",
          "code": "class Scene3(Scene):\n    def construct(self):\n        network = Rectangle(height=2, width=3, color=GREEN)\n        data = [Dot(color=BLUE) for _ in range(6)]\n        VGroup(*data).arrange(RIGHT).next_to(network, LEFT)\n        output = Dot(color=RED).next_to(network, RIGHT)\n        arrows = [Arrow(d, network, color=WHITE) for d in data]\n        final_arrow = Arrow(network, output, color=WHITE)\n\n        self.play(Create(network))\n        self.play(*[Create(d) for d in data])\n        self.play(*[Create(a) for a in arrows])\n        self.play(Create(final_arrow), Create(output))",
          "voice_over": "A neural network learns to map joint sensor readings to touch locations. After just a few hours of training data, it can pinpoint touches within 8 centimeters anywhere on the robot's body at 2000 times per second."
        },
        {
          "type": "manim",
          "code": "class Scene4(Scene):\n    def construct(self):\n        robot = Square(color=YELLOW).scale(1.5)\n        actions = [Text('Pet', font_size=24), Text('Guide', font_size=24), Text('Direct', font_size=24)]\n        VGroup(*actions).arrange(DOWN).next_to(robot, RIGHT)\n        check = Text('\u2713', font_size=48, color=GREEN).next_to(robot, UP)\n\n        self.play(Create(robot))\n        for action in actions:\n            self.play(Write(action))\n        self.play(Write(check))",
          "voice_over": "This breakthrough enables more natural human-robot interaction - robots can now understand petting, guiding touches, and direct manipulation, just like animals do. And it works on any robot with joint sensors, democratizing touch sensing for robotics."
        }
      ]
    }
  },
  "06134678-cc56-4f89-979a-cad1801ac8a1": {
    "job_id": "06134678-cc56-4f89-979a-cad1801ac8a1",
    "status": "completed",
    "created_at": "2025-07-12T17:22:05.046815",
    "pdf_source": "uploads/f9d22dc4-720e-4056-b385-7367beb38072_2507.07980v1.pdf",
    "original_filename": "2507.07980v1.pdf",
    "video_name": null,
    "completed_at": "2025-07-12T17:22:42.818688",
    "video_path": "outputs/video_06134678-cc56-4f89-979a-cad1801ac8a1.mp4",
    "generation_metrics": {
      "video_path": "outputs/video_06134678-cc56-4f89-979a-cad1801ac8a1.mp4",
      "total_clips": 4,
      "successful_clips": 4,
      "failed_clips": 0,
      "success_rate": 1.0,
      "pdf_path": "uploads/f9d22dc4-720e-4056-b385-7367beb38072_2507.07980v1.pdf",
      "clips_config": [
        {
          "type": "manim",
          "code": "class Scene1(Scene):\n    def construct(self):\n        robot = Rectangle(height=3, width=2, color=YELLOW)\n        dots = VGroup(*[Dot(color=RED) for _ in range(5)]).arrange(RIGHT)\n        question = Text('How can robots feel touch?', color=WHITE).scale(0.8)\n        cross = Cross(Rectangle(height=1, width=2, color=BLUE).scale(0.5))\n        sensor_text = Text('No tactile sensors needed!', color=GREEN).scale(0.7)\n\n        self.play(Create(robot))\n        self.play(Create(dots), Write(question))\n        self.play(Create(cross))\n        self.play(Write(sensor_text))",
          "voice_over": "Imagine giving robots the ability to feel touch - but without adding any special sensors. Sounds impossible, right? Well, researchers have found a clever way to do exactly that."
        },
        {
          "type": "manim",
          "code": "class Scene2(Scene):\n    def construct(self):\n        joint = Circle(color=WHITE)\n        arrows = VGroup(*[Arrow(start=ORIGIN, end=direction) for direction in [UP, DOWN, LEFT, RIGHT]])\n        text = Text('Using existing joint sensors', color=BLUE).scale(0.7)\n        brain = Circle(color=PURPLE).scale(1.2)\n        formula = Text('\u2192 Touch Location', color=GREEN).scale(0.7)\n\n        self.play(Create(joint), Create(arrows))\n        self.play(Write(text))\n        self.play(Create(brain), Write(formula))",
          "voice_over": "The key insight is that when you touch a robot, its joint sensors already detect tiny changes in pressure and position. By analyzing these patterns, we can figure out exactly where the touch happened."
        },
        {
          "type": "manim",
          "code": "class Scene3(Scene):\n    def construct(self):\n        network = VGroup(*[Circle(color=BLUE) for _ in range(6)]).arrange_in_grid(2, 3)\n        lines = VGroup(*[Line(c1.get_center(), c2.get_center(), color=WHITE) \n                        for c1, c2 in zip(network[:-1], network[1:])])\n        data = Text('Joint Data', color=YELLOW).scale(0.6)\n        arrow = Arrow(LEFT, RIGHT, color=WHITE)\n        output = Dot(color=RED)\n\n        self.play(Create(network), Create(lines))\n        self.play(Write(data), GrowArrow(arrow))\n        self.play(Create(output))",
          "voice_over": "A neural network processes data from the robot's joints in real-time. It's been trained to recognize specific patterns that indicate where contact occurs, achieving accuracy within 8 centimeters."
        },
        {
          "type": "manim",
          "code": "class Scene4(Scene):\n    def construct(self):\n        robot_arm = Rectangle(height=3, width=0.5, color=YELLOW)\n        dog_robot = Rectangle(height=1.5, width=2, color=YELLOW)\n        hand = Circle(color=ORANGE).scale(0.3)\n        text = Text('Real-time touch detection', color=GREEN).scale(0.7)\n        speed = Text('2000 times per second!', color=BLUE).scale(0.6)\n\n        self.play(Create(robot_arm), Create(dog_robot))\n        self.play(Create(hand), Write(text))\n        self.play(Write(speed))",
          "voice_over": "This breakthrough enables robots to respond naturally to human touch - whether it's a robotic arm following instructions or a robot dog reacting to being petted. And it all happens 2000 times per second, using hardware that's already built in."
        }
      ]
    }
  },
  "fcfb589d-cbc7-477b-8787-7dbdbd7b4ee8": {
    "job_id": "fcfb589d-cbc7-477b-8787-7dbdbd7b4ee8",
    "status": "completed",
    "created_at": "2025-07-12T17:27:42.576837",
    "pdf_source": "uploads/16f63461-b0f2-44df-a6b3-0653e90089fa_2507.07980v1.pdf",
    "original_filename": "2507.07980v1.pdf",
    "video_name": null,
    "completed_at": "2025-07-12T17:28:14.189310",
    "video_path": "outputs/video_fcfb589d-cbc7-477b-8787-7dbdbd7b4ee8.mp4",
    "generation_metrics": {
      "video_path": "outputs/video_fcfb589d-cbc7-477b-8787-7dbdbd7b4ee8.mp4",
      "total_clips": 4,
      "successful_clips": 4,
      "failed_clips": 0,
      "success_rate": 1.0,
      "pdf_path": "uploads/16f63461-b0f2-44df-a6b3-0653e90089fa_2507.07980v1.pdf",
      "clips_config": [
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('UniTac: Touch Sensing Without Sensors', font_size=48).to_edge(UP)\n        self.play(Write(title))\n        self.wait(1)\n        robot = Square(color=BLUE, side_length=2)\n        question = Text('?', font_size=72, color=RED).next_to(robot)\n        self.play(Create(robot), Write(question))\n        self.wait(2)",
          "voice_over": "Most robots today can't feel touch because they lack expensive tactile sensors. But what if robots could sense touch using just their built-in joint sensors?"
        },
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('Using Joint Sensors for Touch', font_size=48).to_edge(UP)\n        self.play(Write(title))\n        self.wait(1)\n        joint = Circle(radius=0.5, color=BLUE)\n        arrow = Arrow(start=LEFT*2, end=RIGHT*2, color=WHITE)\n        contact = Dot(color=RED).shift(RIGHT*2)\n        self.play(Create(joint), Create(arrow), Create(contact))\n        self.wait(2)",
          "voice_over": "UniTac uses data from existing joint sensors to detect and locate touch anywhere on the robot's body, without adding any new hardware."
        },
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('How UniTac Works', font_size=48).to_edge(UP)\n        self.play(Write(title))\n        self.wait(1)\n        data = Rectangle(width=3, height=1.5, color=BLUE).shift(LEFT*2)\n        model = Circle(color=GREEN)\n        output = Rectangle(width=1, height=1, color=RED).shift(RIGHT*2)\n        self.play(Create(data), Create(model), Create(output))\n        self.wait(2)",
          "voice_over": "The system analyzes patterns in joint sensor data using machine learning to precisely locate where contact occurs on the robot's surface."
        },
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('Real-World Impact', font_size=48).to_edge(UP)\n        self.play(Write(title))\n        self.wait(1)\n        accuracy = Text('7-8cm Accuracy', color=GREEN).shift(UP*0.5)\n        speed = Text('2000Hz Speed', color=BLUE).shift(DOWN*0.5)\n        self.play(Write(accuracy), Write(speed))\n        self.wait(2)",
          "voice_over": "This enables robots to safely interact through touch with remarkable precision - localizing contact within 8 centimeters at 2000 times per second."
        }
      ]
    }
  },
  "9d74d549-c9bd-41e9-9c86-aea7ddaaefcf": {
    "job_id": "9d74d549-c9bd-41e9-9c86-aea7ddaaefcf",
    "status": "completed",
    "created_at": "2025-07-12T18:11:01.567034",
    "pdf_source": "uploads/8f9d556a-1e39-4954-901c-50f5211a77ef_2507.07980v1.pdf",
    "original_filename": "2507.07980v1.pdf",
    "video_name": null,
    "completed_at": "2025-07-12T18:11:36.261649",
    "video_path": "outputs/video_9d74d549-c9bd-41e9-9c86-aea7ddaaefcf.mp4",
    "generation_metrics": {
      "video_path": "outputs/video_9d74d549-c9bd-41e9-9c86-aea7ddaaefcf.mp4",
      "total_clips": 4,
      "successful_clips": 4,
      "failed_clips": 0,
      "success_rate": 1.0,
      "pdf_path": "uploads/8f9d556a-1e39-4954-901c-50f5211a77ef_2507.07980v1.pdf",
      "clips_config": [
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('Touch Sensing Without Sensors', font_size=48).to_edge(UP)\n        self.play(Write(title))\n        self.wait(1)\n        robot = Square(color=BLUE, side_length=2).move_to(ORIGIN)\n        question = Text('?', font_size=72, color=RED).next_to(robot, RIGHT)\n        self.play(Create(robot), Write(question))\n        self.wait(2)",
          "voice_over": "Current robots lack a crucial ability - the sense of touch. Adding touch sensors is expensive and complex. But what if robots could feel touch without any special sensors?"
        },
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('Using Built-in Joint Sensors', font_size=48).to_edge(UP)\n        self.play(Write(title))\n        self.wait(1)\n        circle = Circle(radius=1, color=BLUE).move_to(ORIGIN)\n        dots = VGroup(*[Dot(color=YELLOW) for _ in range(6)]).arrange_in_grid(3,2)\n        self.play(Create(circle), Create(dots))\n        self.wait(2)",
          "voice_over": "UniTac uses the robot's existing joint sensors to detect touch. By analyzing changes in joint readings, we can determine where contact occurs on the robot's body."
        },
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('Contact Localization', font_size=48).to_edge(UP)\n        self.play(Write(title))\n        self.wait(1)\n        rect = Rectangle(height=3, width=2, color=BLUE).move_to(ORIGIN)\n        arrow = Arrow(start=LEFT*3, end=rect.get_left(), color=RED)\n        self.play(Create(rect), Create(arrow))\n        self.wait(2)",
          "voice_over": "When someone touches the robot, the contact creates unique patterns in joint sensor readings. Our system processes these patterns to pinpoint the touch location within 8 centimeters."
        },
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('Enabling Natural Interaction', font_size=48).to_edge(UP)\n        self.play(Write(title))\n        self.wait(1)\n        circle1 = Circle(radius=0.5, color=BLUE).shift(LEFT*2)\n        circle2 = Circle(radius=0.5, color=BLUE).shift(RIGHT*2)\n        arrow = Arrow(circle1.get_right(), circle2.get_left(), color=GREEN)\n        self.play(Create(circle1), Create(circle2), Create(arrow))\n        self.wait(2)",
          "voice_over": "This technology enables more natural human-robot interaction, allowing robots to respond to touch-based commands and physical guidance without additional hardware."
        }
      ]
    }
  },
  "34c1b950-f602-40a5-b605-f844319fec13": {
    "job_id": "34c1b950-f602-40a5-b605-f844319fec13",
    "status": "completed",
    "created_at": "2025-07-12T18:16:46.478114",
    "pdf_source": "uploads/f9148bbb-10e5-401a-9093-df1764116e71_2507.07980v1.pdf",
    "original_filename": "2507.07980v1.pdf",
    "video_name": null,
    "completed_at": "2025-07-12T18:18:11.415505",
    "video_path": "outputs/video_34c1b950-f602-40a5-b605-f844319fec13.mp4",
    "generation_metrics": {
      "video_path": "outputs/video_34c1b950-f602-40a5-b605-f844319fec13.mp4",
      "total_clips": 4,
      "successful_clips": 4,
      "failed_clips": 0,
      "success_rate": 1.0,
      "pdf_path": "uploads/f9148bbb-10e5-401a-9093-df1764116e71_2507.07980v1.pdf",
      "clips_config": [
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('UniTac: Touch Sensing Without Sensors', font_size=48).to_edge(UP)\n        self.play(Write(title))\n        self.wait(1)\n        robot = Square(color=BLUE, side_length=2).move_to(ORIGIN)\n        question = Text('?', font_size=72, color=RED).next_to(robot, RIGHT)\n        self.play(Create(robot), FadeIn(question))\n        self.wait(2)",
          "voice_over": "Current robots lack a critical ability - the sense of touch. While humans and animals can naturally feel contact, most robots cannot detect when and where they're being touched."
        },
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('Using Built-in Joint Sensors', font_size=48).to_edge(UP)\n        self.play(Write(title))\n        self.wait(1)\n        circle = Circle(radius=1, color=BLUE).move_to(ORIGIN)\n        dots = VGroup(*[Dot(color=YELLOW) for _ in range(4)]).arrange_in_grid(2,2, buff=1)\n        self.play(Create(circle), Create(dots))\n        self.wait(2)",
          "voice_over": "UniTac uses the robot's existing joint sensors to detect touch, without requiring any additional hardware. It works by analyzing subtle changes in joint readings when contact occurs."
        },
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('How UniTac Works', font_size=48).to_edge(UP)\n        self.play(Write(title))\n        self.wait(1)\n        rect = Rectangle(height=2, width=3, color=BLUE).move_to(ORIGIN)\n        arrow = Arrow(start=LEFT*3, end=RIGHT*3, color=GREEN)\n        self.play(Create(rect), Create(arrow))\n        self.wait(2)",
          "voice_over": "When someone touches the robot, it creates unique patterns in the joint sensor readings. A neural network analyzes these patterns to determine the exact location of contact."
        },
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('Making Robots More Interactive', font_size=48).to_edge(UP)\n        self.play(Write(title))\n        self.wait(1)\n        circle1 = Circle(radius=0.5, color=BLUE).shift(LEFT*2)\n        circle2 = Circle(radius=0.5, color=BLUE).shift(RIGHT*2)\n        arrow = Arrow(circle1.get_right(), circle2.get_left(), color=GREEN)\n        self.play(Create(circle1), Create(circle2), Create(arrow))\n        self.wait(2)",
          "voice_over": "This breakthrough enables more natural human-robot interaction, allowing robots to respond to touch-based commands and better understand physical contact with their environment."
        }
      ]
    }
  },
  "4e5ec89d-be50-4485-b668-9eae78fe61be": {
    "job_id": "4e5ec89d-be50-4485-b668-9eae78fe61be",
    "status": "completed",
    "created_at": "2025-07-12T18:52:00.475523",
    "pdf_source": "uploads/a174e4bd-b7fc-44df-b3a9-4c4cd7ba135f_2507.07980v1.pdf",
    "original_filename": "2507.07980v1.pdf",
    "video_name": null,
    "completed_at": "2025-07-12T18:53:23.683777",
    "video_path": "outputs/video_4e5ec89d-be50-4485-b668-9eae78fe61be.mp4",
    "generation_metrics": {
      "video_path": "outputs/video_4e5ec89d-be50-4485-b668-9eae78fe61be.mp4",
      "total_clips": 4,
      "successful_clips": 4,
      "failed_clips": 0,
      "success_rate": 1.0,
      "pdf_path": "uploads/a174e4bd-b7fc-44df-b3a9-4c4cd7ba135f_2507.07980v1.pdf",
      "clips_config": [
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('UniTac: Touch Sensing Without Sensors', font_size=48).to_edge(UP)\n        self.play(Write(title))\n        self.wait(1)\n        robot = Square(color=BLUE, side_length=2)\n        question = Text('?', font_size=72, color=RED).next_to(robot)\n        self.play(Create(robot), FadeIn(question))\n        self.wait(2)",
          "voice_over": "Most robots today can't feel touch because they lack expensive tactile sensors. But what if robots could sense touch using only their built-in joint sensors?"
        },
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('Joint Sensors to Touch Location', font_size=48).to_edge(UP)\n        self.play(Write(title))\n        self.wait(1)\n        robot = Rectangle(height=3, width=2, color=BLUE)\n        dot = Dot(color=RED).move_to(robot.get_right())\n        self.play(Create(robot), Create(dot))\n        self.wait(2)",
          "voice_over": "UniTac uses data from existing joint sensors to determine where contact occurs on the robot's body, without needing any additional hardware."
        },
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('How UniTac Works', font_size=48).to_edge(UP)\n        self.play(Write(title))\n        self.wait(1)\n        arrow1 = Arrow(LEFT*3, ORIGIN, color=BLUE)\n        arrow2 = Arrow(ORIGIN, RIGHT*3, color=GREEN)\n        text1 = Text('Joint Data', font_size=36).next_to(arrow1, UP)\n        text2 = Text('Contact Point', font_size=36).next_to(arrow2, UP)\n        self.play(Create(arrow1), Create(arrow2), Write(text1), Write(text2))\n        self.wait(2)",
          "voice_over": "The system analyzes patterns in joint sensor readings to predict the exact location where contact occurs, processing this data in real-time."
        },
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('Enabling Natural Robot Interaction', font_size=48).to_edge(UP)\n        self.play(Write(title))\n        self.wait(1)\n        circle = Circle(radius=1.5, color=BLUE)\n        text = Text('7-8cm accuracy', font_size=36).next_to(circle, DOWN)\n        self.play(Create(circle), FadeIn(text))\n        self.wait(2)",
          "voice_over": "With UniTac, robots can now sense touch with 7-8 centimeter accuracy, enabling more natural human-robot interaction without expensive hardware modifications."
        }
      ]
    }
  },
  "f0b6dd77-07ac-4b69-a5e2-c2ba4624b8df": {
    "job_id": "f0b6dd77-07ac-4b69-a5e2-c2ba4624b8df",
    "status": "failed",
    "created_at": "2025-07-12T22:03:20.501057",
    "pdf_source": "https://arxiv.org/pdf/2301.07041.pdf",
    "quality": "medium_quality",
    "video_name": null,
    "error": "Error code: 400 - {'type': 'error', 'error': {'type': 'invalid_request_error', 'message': 'Only HTTPS URLs are supported.'}}"
  },
  "940a5319-7847-454c-97f8-455bf2426e6d": {
    "job_id": "940a5319-7847-454c-97f8-455bf2426e6d",
    "status": "failed",
    "created_at": "2025-07-12T22:03:34.618019",
    "pdf_source": "https://arxiv.org/pdf/2301.07041.pdf",
    "quality": "medium_quality",
    "video_name": null,
    "error": "Error code: 400 - {'type': 'error', 'error': {'type': 'invalid_request_error', 'message': 'Only HTTPS URLs are supported.'}}"
  },
  "2389c763-f726-40b5-bfe5-4c703b989c30": {
    "job_id": "2389c763-f726-40b5-bfe5-4c703b989c30",
    "status": "failed",
    "created_at": "2025-07-12T22:05:24.105177",
    "pdf_source": "https://arxiv.org/pdf/2301.07041.pdf",
    "quality": "medium_quality",
    "video_name": null,
    "error": "Error code: 400 - {'type': 'error', 'error': {'type': 'invalid_request_error', 'message': 'Only HTTPS URLs are supported.'}}"
  },
  "3cfe61e7-1860-49a9-b336-b7261009d3b3": {
    "job_id": "3cfe61e7-1860-49a9-b336-b7261009d3b3",
    "status": "failed",
    "created_at": "2025-07-12T22:07:22.646848",
    "pdf_source": "https://arxiv.org/pdf/2301.07041.pdf",
    "quality": "medium_quality",
    "video_name": null,
    "error": "Error code: 400 - {'type': 'error', 'error': {'type': 'invalid_request_error', 'message': 'Only HTTPS URLs are supported.'}}"
  },
  "0ee4e2a8-5ff9-4c0d-bebb-e358db6357e1": {
    "job_id": "0ee4e2a8-5ff9-4c0d-bebb-e358db6357e1",
    "status": "failed",
    "created_at": "2025-07-12T22:11:34.232106",
    "pdf_source": "https://arxiv.org/pdf/2301.07041.pdf",
    "quality": "medium_quality",
    "video_name": null,
    "error": "Error code: 400 - {'type': 'error', 'error': {'type': 'invalid_request_error', 'message': 'Only HTTPS URLs are supported.'}}"
  },
  "f785b5dd-610a-4516-a06b-611943cbb4f4": {
    "job_id": "f785b5dd-610a-4516-a06b-611943cbb4f4",
    "status": "completed",
    "created_at": "2025-07-12T22:11:52.937215",
    "pdf_source": "https://www.w3.org/WAI/ER/tests/xhtml/testfiles/resources/pdf/dummy.pdf",
    "quality": "medium_quality",
    "video_name": null,
    "completed_at": "2025-07-12T22:13:36.424230",
    "video_path": "outputs/video_f785b5dd-610a-4516-a06b-611943cbb4f4.mp4",
    "generation_metrics": {
      "video_path": "outputs/video_f785b5dd-610a-4516-a06b-611943cbb4f4.mp4",
      "total_clips": 4,
      "successful_clips": 3,
      "failed_clips": 0,
      "success_rate": 0.75,
      "pdf_url": "https://www.w3.org/WAI/ER/tests/xhtml/testfiles/resources/pdf/dummy.pdf",
      "clips_config": [
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('PDF Document Structure', font_size=48).to_edge(UP)\n        rect = Rectangle(height=3, width=2, color=BLUE)\n        self.play(Write(title))\n        self.wait(1)\n        self.play(Create(rect))\n        self.wait(8)\n        self.wait(1)",
          "voice_over": "PDF documents are structured digital files that maintain consistent formatting across different devices and platforms."
        },
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('Document Components', font_size=48).to_edge(UP)\n        elements = VGroup(\n            Square(side_length=0.8, color=BLUE),\n            Square(side_length=0.8, color=BLUE),\n            Square(side_length=0.8, color=BLUE)\n        ).arrange(DOWN, buff=0.5)\n        self.play(Write(title))\n        self.wait(1)\n        self.play(Create(elements))\n        self.wait(8)\n        self.wait(1)",
          "voice_over": "PDFs consist of multiple elements like text, images, and metadata, all organized in a hierarchical structure."
        },
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('Data Organization', font_size=48).to_edge(UP)\n        arrow = Arrow(start=LEFT, end=RIGHT, color=BLUE)\n        dot = Dot(color=RED)\n        self.play(Write(title))\n        self.wait(1)\n        self.play(Create(arrow), FadeIn(dot))\n        self.wait(8)\n        self.wait(1)",
          "voice_over": "Information flows linearly through the document, with each element precisely positioned and formatted."
        },
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('Universal Access', font_size=48).to_edge(UP)\n        circle = Circle(radius=1.5, color=BLUE)\n        lines = VGroup(*[Line(ORIGIN, radius=1.5) for _ in range(8)]).arrange_in_grid(rows=2, cols=4)\n        self.play(Write(title))\n        self.wait(1)\n        self.play(Create(circle), Create(lines))\n        self.wait(8)\n        self.wait(1)",
          "voice_over": "This structure ensures that PDFs can be reliably viewed and shared across any device or operating system."
        }
      ]
    }
  },
  "a44182f6-bc9f-4275-a112-f4cda44e37ba": {
    "job_id": "a44182f6-bc9f-4275-a112-f4cda44e37ba",
    "status": "completed",
    "created_at": "2025-07-12T22:12:16.877336",
    "pdf_source": "https://www.w3.org/WAI/ER/tests/xhtml/testfiles/resources/pdf/dummy.pdf",
    "quality": "medium_quality",
    "video_name": null,
    "completed_at": "2025-07-12T22:13:46.171693",
    "video_path": "outputs/video_a44182f6-bc9f-4275-a112-f4cda44e37ba.mp4",
    "generation_metrics": {
      "video_path": "outputs/video_a44182f6-bc9f-4275-a112-f4cda44e37ba.mp4",
      "total_clips": 4,
      "successful_clips": 4,
      "failed_clips": 0,
      "success_rate": 1.0,
      "pdf_url": "https://www.w3.org/WAI/ER/tests/xhtml/testfiles/resources/pdf/dummy.pdf",
      "clips_config": [
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('Understanding Dummy Files', font_size=48).to_edge(UP)\n        self.play(Write(title))\n        self.wait(1)\n        rect = Rectangle(height=3, width=4, color=BLUE).move_to(ORIGIN)\n        self.play(Create(rect))\n        self.wait(2)\n        text = Text('A placeholder document', font_size=36).next_to(rect, DOWN)\n        self.play(FadeIn(text))\n        self.wait(1)",
          "voice_over": "Let's explore what dummy files are and why they're used in software development and testing."
        },
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('Purpose of Dummy Files', font_size=48).to_edge(UP)\n        self.play(Write(title))\n        self.wait(1)\n        circle = Circle(radius=1.5, color=GREEN).move_to(ORIGIN)\n        self.play(Create(circle))\n        self.wait(2)\n        text = Text('Testing & Development', font_size=36).next_to(circle, DOWN)\n        self.play(FadeIn(text))\n        self.wait(1)",
          "voice_over": "Dummy files serve as placeholders during development, allowing developers to test functionality without real data."
        },
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('How They Work', font_size=48).to_edge(UP)\n        self.play(Write(title))\n        self.wait(1)\n        square = Square(side_length=2, color=BLUE).move_to(ORIGIN)\n        arrow = Arrow(start=LEFT*3, end=RIGHT*3, color=WHITE)\n        self.play(Create(square), Create(arrow))\n        self.wait(2)",
          "voice_over": "These files contain minimal content but maintain the correct format and structure needed for testing."
        },
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('Benefits', font_size=48).to_edge(UP)\n        self.play(Write(title))\n        self.wait(1)\n        rect = Rectangle(height=2, width=3, color=GREEN).move_to(ORIGIN)\n        text = Text('Safe Testing Environment', font_size=36).next_to(rect, DOWN)\n        self.play(Create(rect), FadeIn(text))\n        self.wait(2)",
          "voice_over": "Using dummy files ensures safe testing without risking real data, making development more efficient and secure."
        }
      ]
    }
  },
  "1fe69540-7150-4dfe-91fb-0f9244391d91": {
    "job_id": "1fe69540-7150-4dfe-91fb-0f9244391d91",
    "status": "completed",
    "created_at": "2025-07-12T22:17:46.889589",
    "pdf_source": "https://www.w3.org/WAI/ER/tests/xhtml/testfiles/resources/pdf/dummy.pdf",
    "quality": "medium_quality",
    "video_name": null,
    "completed_at": "2025-07-12T22:19:07.087698",
    "video_path": "outputs/video_1fe69540-7150-4dfe-91fb-0f9244391d91.mp4",
    "generation_metrics": {
      "video_path": "outputs/video_1fe69540-7150-4dfe-91fb-0f9244391d91.mp4",
      "total_clips": 4,
      "successful_clips": 4,
      "failed_clips": 0,
      "success_rate": 1.0,
      "pdf_url": "https://www.w3.org/WAI/ER/tests/xhtml/testfiles/resources/pdf/dummy.pdf",
      "clips_config": [
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('Exploring PDF Documents', font_size=48).to_edge(UP)\n        self.play(Write(title))\n        self.wait(1)\n        doc = Rectangle(height=3, width=2, color=BLUE)\n        self.play(Create(doc))\n        self.wait(2)\n        self.wait(1)",
          "voice_over": "PDF documents have become the standard format for sharing digital information. Let's explore what makes them so important."
        },
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('Document Structure', font_size=48).to_edge(UP)\n        self.play(Write(title))\n        self.wait(1)\n        layers = VGroup(*[Rectangle(height=0.5, width=2) for _ in range(3)]).arrange(DOWN)\n        self.play(Create(layers))\n        self.wait(2)\n        self.wait(1)",
          "voice_over": "PDFs are built in layers, containing text, images, and formatting information that stays consistent across all devices."
        },
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('Universal Compatibility', font_size=48).to_edge(UP)\n        self.play(Write(title))\n        self.wait(1)\n        devices = VGroup(\n            Square(side_length=1, color=GREEN),\n            Circle(radius=0.5, color=GREEN)\n        ).arrange(RIGHT, buff=2)\n        arrow = Arrow(devices[0], devices[1], color=WHITE)\n        self.play(Create(devices), Create(arrow))\n        self.wait(1)",
          "voice_over": "One of PDF's greatest strengths is its ability to maintain formatting across different devices and operating systems."
        },
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('Digital Documentation', font_size=48).to_edge(UP)\n        self.play(Write(title))\n        self.wait(1)\n        check = Text('\u2713', font_size=72, color=GREEN).shift(UP*0.5)\n        text = Text('Secure & Reliable', font_size=36).shift(DOWN*0.5)\n        self.play(Write(check))\n        self.play(FadeIn(text))\n        self.wait(1)",
          "voice_over": "PDFs have revolutionized document sharing, making it the trusted choice for secure and reliable digital documentation worldwide."
        }
      ]
    }
  },
  "8f861db1-2b68-4c5c-9782-1624e3b7816c": {
    "job_id": "8f861db1-2b68-4c5c-9782-1624e3b7816c",
    "status": "failed",
    "created_at": "2025-07-12T22:35:16.322159",
    "pdf_source": "https://www.w3.org/WAI/ER/tests/xhtml/testfiles/resources/pdf/dummy.pdf",
    "quality": "medium_quality",
    "video_name": null,
    "error": "No clips were successfully generated"
  },
  "734b8fbd-9b4d-41be-8d93-075aa947cb63": {
    "job_id": "734b8fbd-9b4d-41be-8d93-075aa947cb63",
    "status": "failed",
    "created_at": "2025-07-12T22:49:47.816567",
    "pdf_source": "https://www.w3.org/WAI/ER/tests/xhtml/testfiles/resources/pdf/dummy.pdf",
    "quality": "medium_quality",
    "video_name": null,
    "error": "No clips were successfully generated"
  },
  "c8a1b7e5-8f59-4356-a551-c1b0752ec67a": {
    "job_id": "c8a1b7e5-8f59-4356-a551-c1b0752ec67a",
    "status": "failed",
    "created_at": "2025-07-12T22:50:03.187864",
    "pdf_source": "https://www.w3.org/WAI/ER/tests/xhtml/testfiles/resources/pdf/dummy.pdf",
    "quality": "medium_quality",
    "video_name": null,
    "error": "No clips were successfully generated"
  },
  "1da0e569-ce1d-4332-b38f-89ea83843e86": {
    "job_id": "1da0e569-ce1d-4332-b38f-89ea83843e86",
    "status": "failed",
    "created_at": "2025-07-12T22:59:20.003843",
    "pdf_source": "https://www.w3.org/WAI/ER/tests/xhtml/testfiles/resources/pdf/dummy.pdf",
    "quality": "medium_quality",
    "video_name": null,
    "error": "No clips were successfully generated"
  },
  "46f0bcc2-615e-4c20-9018-a5b2b9abb9d8": {
    "job_id": "46f0bcc2-615e-4c20-9018-a5b2b9abb9d8",
    "status": "failed",
    "created_at": "2025-07-12T23:02:34.495281",
    "pdf_source": "https://www.w3.org/WAI/ER/tests/xhtml/testfiles/resources/pdf/dummy.pdf",
    "quality": "medium_quality",
    "video_name": null,
    "error": "No clips were successfully generated"
  },
  "be1486ff-e3a5-450e-bed6-1ecb268173fc": {
    "job_id": "be1486ff-e3a5-450e-bed6-1ecb268173fc",
    "status": "failed",
    "created_at": "2025-07-12T23:04:33.724826",
    "pdf_source": "https://www.w3.org/WAI/ER/tests/xhtml/testfiles/resources/pdf/dummy.pdf",
    "quality": "medium_quality",
    "video_name": null,
    "error": "No clips were successfully generated"
  },
  "ea007729-1d32-4bc0-8c2d-d92b8e52de41": {
    "job_id": "ea007729-1d32-4bc0-8c2d-d92b8e52de41",
    "status": "failed",
    "created_at": "2025-07-12T23:15:48.964294",
    "pdf_source": "https://www.w3.org/WAI/ER/tests/xhtml/testfiles/resources/pdf/dummy.pdf",
    "quality": "medium_quality",
    "video_name": null,
    "error": "No clips were successfully generated"
  },
  "cef50f70-456c-4013-88f9-2223f8376d03": {
    "job_id": "cef50f70-456c-4013-88f9-2223f8376d03",
    "status": "failed",
    "created_at": "2025-07-12T23:17:05.057841",
    "pdf_source": "https://www.w3.org/WAI/ER/tests/xhtml/testfiles/resources/pdf/dummy.pdf",
    "quality": "medium_quality",
    "video_name": null,
    "error": "[Errno 2] No such file or directory: '/Users/bhargavap/Downloads/manim_video_generation-main/venv/lib/python3.12/site-packages/imageio_ffmpeg/binaries/ffmpeg-macos-aarch64-v7.1'"
  },
  "64eea401-554d-4ae5-8265-f5b3434e43be": {
    "job_id": "64eea401-554d-4ae5-8265-f5b3434e43be",
    "status": "failed",
    "created_at": "2025-07-12T23:19:39.411972",
    "pdf_source": "https://www.w3.org/WAI/ER/tests/xhtml/testfiles/resources/pdf/dummy.pdf",
    "quality": "medium_quality",
    "video_name": null,
    "error": "[Errno 2] No such file or directory: '/Users/bhargavap/Downloads/manim_video_generation-main/venv/lib/python3.12/site-packages/imageio_ffmpeg/binaries/ffmpeg-macos-aarch64-v7.1'"
  },
  "879fc5a7-d72b-4498-92b3-2013024ea9fd": {
    "job_id": "879fc5a7-d72b-4498-92b3-2013024ea9fd",
    "status": "failed",
    "created_at": "2025-07-12T23:21:00.888208",
    "pdf_source": "https://www.w3.org/WAI/ER/tests/xhtml/testfiles/resources/pdf/dummy.pdf",
    "quality": "medium_quality",
    "video_name": null,
    "error": "[Errno 2] No such file or directory: '/Users/bhargavap/Downloads/manim_video_generation-main/venv/lib/python3.12/site-packages/imageio_ffmpeg/binaries/ffmpeg-macos-aarch64-v7.1'"
  },
  "cff42a5e-75a2-4fc7-b872-1d412aa3781a": {
    "job_id": "cff42a5e-75a2-4fc7-b872-1d412aa3781a",
    "status": "failed",
    "created_at": "2025-07-12T23:22:54.487766",
    "pdf_source": "https://www.w3.org/WAI/ER/tests/xhtml/testfiles/resources/pdf/dummy.pdf",
    "quality": "medium_quality",
    "video_name": null,
    "error": "[Errno 2] No such file or directory: '/Users/bhargavap/Downloads/manim_video_generation-main/venv/lib/python3.12/site-packages/imageio_ffmpeg/binaries/ffmpeg-macos-aarch64-v7.1'"
  },
  "2cf5e0ee-a629-490d-84b0-77ceb6e346e4": {
    "job_id": "2cf5e0ee-a629-490d-84b0-77ceb6e346e4",
    "status": "failed",
    "created_at": "2025-07-12T23:24:37.880320",
    "pdf_source": "https://www.w3.org/WAI/ER/tests/xhtml/testfiles/resources/pdf/dummy.pdf",
    "quality": "medium_quality",
    "video_name": null,
    "error": "[Errno 2] No such file or directory: '/Users/bhargavap/Downloads/manim_video_generation-main/venv/lib/python3.12/site-packages/imageio_ffmpeg/binaries/ffmpeg-macos-aarch64-v7.1'"
  },
  "d3c85b04-dea4-4cb0-a617-e98036c11ae1": {
    "job_id": "d3c85b04-dea4-4cb0-a617-e98036c11ae1",
    "status": "failed",
    "created_at": "2025-07-12T23:25:49.782623",
    "pdf_source": "https://www.w3.org/WAI/ER/tests/xhtml/testfiles/resources/pdf/dummy.pdf",
    "quality": "medium_quality",
    "video_name": null,
    "error": "[Errno 2] No such file or directory: '/Users/bhargavap/Downloads/manim_video_generation-main/venv/lib/python3.12/site-packages/imageio_ffmpeg/binaries/ffmpeg-macos-aarch64-v7.1'"
  },
  "6d49cbeb-04f8-435a-ba4f-7961b486ddc8": {
    "job_id": "6d49cbeb-04f8-435a-ba4f-7961b486ddc8",
    "status": "failed",
    "created_at": "2025-07-12T23:27:43.506276",
    "pdf_source": "https://www.w3.org/WAI/ER/tests/xhtml/testfiles/resources/pdf/dummy.pdf",
    "quality": "medium_quality",
    "video_name": null,
    "error": "[Errno 2] No such file or directory: '/Users/bhargavap/Downloads/manim_video_generation-main/venv/lib/python3.12/site-packages/imageio_ffmpeg/binaries/ffmpeg-macos-aarch64-v7.1'"
  },
  "32fc488d-f465-419b-bb70-32d2e7082852": {
    "job_id": "32fc488d-f465-419b-bb70-32d2e7082852",
    "status": "failed",
    "created_at": "2025-07-12T23:29:37.764973",
    "pdf_source": "https://www.w3.org/WAI/ER/tests/xhtml/testfiles/resources/pdf/dummy.pdf",
    "quality": "medium_quality",
    "video_name": null,
    "error": "[Errno 2] No such file or directory: '/Users/bhargavap/Downloads/manim_video_generation-main/venv/lib/python3.12/site-packages/imageio_ffmpeg/binaries/ffmpeg-macos-aarch64-v7.1'"
  },
  "5bc7c33d-f1d6-426c-82c5-ba24a7a3cc4a": {
    "job_id": "5bc7c33d-f1d6-426c-82c5-ba24a7a3cc4a",
    "status": "completed",
    "created_at": "2025-07-12T23:32:06.914510",
    "pdf_source": "https://www.w3.org/WAI/ER/tests/xhtml/testfiles/resources/pdf/dummy.pdf",
    "quality": "medium_quality",
    "video_name": null,
    "completed_at": "2025-07-12T23:32:32.872236",
    "video_path": "outputs/video_5bc7c33d-f1d6-426c-82c5-ba24a7a3cc4a.mp4",
    "generation_metrics": {
      "video_path": "outputs/video_5bc7c33d-f1d6-426c-82c5-ba24a7a3cc4a.mp4",
      "total_clips": 4,
      "successful_clips": 4,
      "failed_clips": 0,
      "success_rate": 1.0,
      "pdf_url": "https://www.w3.org/WAI/ER/tests/xhtml/testfiles/resources/pdf/dummy.pdf",
      "clips_config": [
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('Understanding Document Analysis', font_size=48).to_edge(UP)\n        self.play(Write(title))\n        self.wait(1)\n        doc = Rectangle(height=3, width=2, color=BLUE)\n        self.play(Create(doc))\n        self.wait(2)\n        text = Text('Processing Files', font_size=36).shift(DOWN*2)\n        self.play(FadeIn(text))\n        self.wait(1)",
          "voice_over": "In today's digital age, document analysis has become increasingly important for extracting meaningful information from files."
        },
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('Document Structure', font_size=48).to_edge(UP)\n        self.play(Write(title))\n        self.wait(1)\n        rect = Rectangle(height=2, width=3, color=GREEN)\n        lines = VGroup(*[Line(start=[-1,y,0], end=[1,y,0]) for y in [-0.5,0,0.5]])\n        self.play(Create(rect), Create(lines))\n        self.wait(2)",
          "voice_over": "Documents contain structured information organized in layers, making them ideal for automated processing and analysis."
        },
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('Analysis Process', font_size=48).to_edge(UP)\n        self.play(Write(title))\n        self.wait(1)\n        circles = VGroup(*[Circle(radius=0.5).shift(RIGHT*i*2-2) for i in range(3)])\n        arrows = VGroup(*[Arrow(start=circles[i].get_right(), end=circles[i+1].get_left()) for i in range(2)])\n        self.play(Create(circles), Create(arrows))\n        self.wait(2)",
          "voice_over": "The analysis follows a systematic process: scanning, processing, and extracting key information from the document."
        },
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('Results & Benefits', font_size=48).to_edge(UP)\n        self.play(Write(title))\n        self.wait(1)\n        check = Square(side_length=2, color=BLUE)\n        tick = VGroup(Line([-0.5,-0.5,0], [0,0,0]), Line([0,0,0], [0.8,0.8,0]))\n        self.play(Create(check), Create(tick))\n        self.wait(2)",
          "voice_over": "Effective document analysis leads to better organization, faster processing, and more accurate information extraction."
        }
      ]
    }
  },
  "9477158c-ca6d-4376-84fa-eb9a72def4d7": {
    "job_id": "9477158c-ca6d-4376-84fa-eb9a72def4d7",
    "status": "completed",
    "created_at": "2025-07-12T23:37:07.559626",
    "pdf_source": "https://www.w3.org/WAI/ER/tests/xhtml/testfiles/resources/pdf/dummy.pdf",
    "quality": "medium_quality",
    "video_name": null,
    "completed_at": "2025-07-12T23:37:35.907718",
    "video_path": "outputs/video_9477158c-ca6d-4376-84fa-eb9a72def4d7.mp4",
    "generation_metrics": {
      "video_path": "outputs/video_9477158c-ca6d-4376-84fa-eb9a72def4d7.mp4",
      "total_clips": 4,
      "successful_clips": 4,
      "failed_clips": 0,
      "success_rate": 1.0,
      "pdf_url": "https://www.w3.org/WAI/ER/tests/xhtml/testfiles/resources/pdf/dummy.pdf",
      "clips_config": [
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('Understanding Dummy Files', font_size=48).to_edge(UP)\n        self.play(Write(title))\n        self.wait(1)\n        question = Text('What is a dummy file?', font_size=36).move_to(ORIGIN)\n        self.play(FadeIn(question))\n        self.wait(2)\n        self.wait(1)",
          "voice_over": "Let's explore what dummy files are and why they're important in software development. These placeholder files serve a crucial purpose in testing and development."
        },
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('Purpose of Dummy Files', font_size=48).to_edge(UP)\n        self.play(Write(title))\n        self.wait(1)\n        rectangle = Rectangle(height=2, width=3, color=BLUE).move_to(ORIGIN)\n        text = Text('Template', font_size=32).move_to(rectangle)\n        self.play(Create(rectangle), Write(text))\n        self.wait(2)\n        self.wait(1)",
          "voice_over": "Dummy files act as templates or placeholders in development environments. They help test system functionality without using real data."
        },
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('How Dummy Files Work', font_size=48).to_edge(UP)\n        self.play(Write(title))\n        self.wait(1)\n        circle1 = Circle(radius=0.5, color=GREEN).shift(LEFT*2)\n        circle2 = Circle(radius=0.5, color=GREEN).shift(RIGHT*2)\n        arrow = Arrow(circle1.get_right(), circle2.get_left(), color=WHITE)\n        self.play(Create(circle1), Create(arrow), Create(circle2))\n        self.wait(2)\n        self.wait(1)",
          "voice_over": "When a system needs to process files, dummy files simulate real data flow. They maintain the correct structure while containing minimal content."
        },
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('Benefits of Dummy Files', font_size=48).to_edge(UP)\n        self.play(Write(title))\n        self.wait(1)\n        check1 = Square(side_length=0.5, color=BLUE).shift(UP*0.5)\n        check2 = Square(side_length=0.5, color=BLUE).shift(DOWN*0.5)\n        self.play(Create(check1), Create(check2))\n        text = Text('Safe Testing', font_size=36).next_to(check2, DOWN)\n        self.play(Write(text))\n        self.wait(1)",
          "voice_over": "Using dummy files enables safe testing and development without risking real data. This makes them invaluable for software development and system validation."
        }
      ]
    }
  },
  "3cb01863-38e7-438d-99fd-f3aea04a2cfa": {
    "job_id": "3cb01863-38e7-438d-99fd-f3aea04a2cfa",
    "status": "failed",
    "created_at": "2025-07-12T23:52:36.870672",
    "pdf_source": "http://localhost:3000/uploads/1752387321136-research_paper_1.pdf",
    "quality": "medium_quality",
    "video_name": null,
    "error": "Error code: 400 - {'type': 'error', 'error': {'type': 'invalid_request_error', 'message': 'Only HTTPS URLs are supported.'}}"
  },
  "16828ba3-e440-4793-958f-c5e41cec543d": {
    "job_id": "16828ba3-e440-4793-958f-c5e41cec543d",
    "status": "completed",
    "created_at": "2025-07-13T00:01:54.597441",
    "pdf_source": "uploads/58270720-5faa-46f7-9be6-78224e98d63d_molecules-19-19066.pdf",
    "original_filename": "molecules-19-19066.pdf",
    "video_name": null,
    "completed_at": "2025-07-13T00:02:23.587155",
    "video_path": "outputs/video_16828ba3-e440-4793-958f-c5e41cec543d.mp4",
    "generation_metrics": {
      "video_path": "outputs/video_16828ba3-e440-4793-958f-c5e41cec543d.mp4",
      "total_clips": 4,
      "successful_clips": 4,
      "failed_clips": 0,
      "success_rate": 1.0,
      "pdf_path": "uploads/58270720-5faa-46f7-9be6-78224e98d63d_molecules-19-19066.pdf",
      "clips_config": [
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('BPC 157: A Healing Peptide', font_size=48).to_edge(UP)\n        subtitle = Text('Key protein for tissue repair', font_size=36).shift(DOWN)\n        self.play(Write(title))\n        self.wait(1)\n        self.play(FadeIn(subtitle))\n        self.wait(2)",
          "voice_over": "BPC 157 is a remarkable peptide discovered in human gastric juice that shows powerful healing properties for various tissues including tendons, muscles, and bones."
        },
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('Growth Hormone Receptor', font_size=48).to_edge(UP)\n        receptor = Circle(radius=1.5, color=BLUE)\n        arrow = Arrow(start=UP, end=DOWN, color=WHITE)\n        self.play(Write(title))\n        self.wait(1)\n        self.play(Create(receptor), Create(arrow))\n        self.wait(2)",
          "voice_over": "BPC 157 works by enhancing the expression of growth hormone receptors on cell surfaces, which are crucial for tissue healing and regeneration."
        },
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('Activation Mechanism', font_size=48).to_edge(UP)\n        cell = Circle(radius=1, color=BLUE)\n        dots = VGroup(*[Dot(color=GREEN) for _ in range(5)]).arrange_in_grid()\n        self.play(Write(title))\n        self.wait(1)\n        self.play(Create(cell), FadeIn(dots))\n        self.wait(2)",
          "voice_over": "When growth hormone binds to these receptors, it triggers a cascade of healing processes, increasing cell proliferation and tissue repair."
        },
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('Enhanced Healing', font_size=48).to_edge(UP)\n        rect = Rectangle(height=2, width=3, color=GREEN)\n        text = Text('Faster Recovery', font_size=36).shift(DOWN)\n        self.play(Write(title))\n        self.wait(1)\n        self.play(Create(rect), FadeIn(text))\n        self.wait(2)",
          "voice_over": "This enhanced receptor expression leads to more effective tissue healing, potentially revolutionizing how we treat injuries and accelerate recovery."
        }
      ]
    }
  },
  "8a47c3f5-426f-4915-85c4-57ed7e237e8a": {
    "job_id": "8a47c3f5-426f-4915-85c4-57ed7e237e8a",
    "status": "completed",
    "created_at": "2025-07-13T00:09:34.166231",
    "pdf_source": "uploads/76e81b65-e149-4ece-a01d-e246bec2ec34_research_paper_2.pdf",
    "original_filename": "research_paper_2.pdf",
    "video_name": null,
    "completed_at": "2025-07-13T00:10:18.043631",
    "video_path": "outputs/video_8a47c3f5-426f-4915-85c4-57ed7e237e8a.mp4",
    "generation_metrics": {
      "video_path": "outputs/video_8a47c3f5-426f-4915-85c4-57ed7e237e8a.mp4",
      "total_clips": 4,
      "successful_clips": 4,
      "failed_clips": 0,
      "success_rate": 1.0,
      "pdf_path": "uploads/76e81b65-e149-4ece-a01d-e246bec2ec34_research_paper_2.pdf",
      "clips_config": [
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('DIKWP Model for AI Evaluation', font_size=48).to_edge(UP)\n        self.play(Write(title))\n        self.wait(1)\n        diagram = Rectangle(width=4, height=2.5, color=BLUE)\n        subtitle = Text('A New Framework for Testing AI Systems', font_size=36).next_to(diagram, DOWN)\n        self.play(Create(diagram), FadeIn(subtitle))\n        self.wait(2)",
          "voice_over": "Introducing the DIKWP model - a comprehensive new framework for evaluating artificial intelligence systems that goes beyond traditional testing methods."
        },
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('Core Components', font_size=48).to_edge(UP)\n        self.play(Write(title))\n        self.wait(1)\n        elements = VGroup(\n            Circle(radius=0.4, color=BLUE).shift(LEFT*2),\n            Circle(radius=0.4, color=RED),\n            Circle(radius=0.4, color=GREEN).shift(RIGHT*2)\n        )\n        labels = VGroup(\n            Text('Data', font_size=32).next_to(elements[0], DOWN),\n            Text('Knowledge', font_size=32).next_to(elements[1], DOWN),\n            Text('Purpose', font_size=32).next_to(elements[2], DOWN)\n        )\n        self.play(Create(elements), FadeIn(labels))\n        self.wait(2)",
          "voice_over": "The model integrates five key elements: Data, Information, Knowledge, Wisdom, and Purpose - creating a networked approach to AI evaluation."
        },
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('Connected Evaluation', font_size=48).to_edge(UP)\n        self.play(Write(title))\n        self.wait(1)\n        circle1 = Circle(radius=1, color=BLUE).shift(LEFT*2)\n        circle2 = Circle(radius=1, color=RED).shift(RIGHT*2)\n        arrow = Arrow(circle1.get_right(), circle2.get_left(), color=WHITE)\n        self.play(Create(circle1), Create(circle2))\n        self.play(Create(arrow))\n        self.wait(2)",
          "voice_over": "Through interconnected analysis across cognitive, semantic and conceptual spaces, the model provides a more complete assessment of AI capabilities."
        },
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('Impact on AI Development', font_size=48).to_edge(UP)\n        self.play(Write(title))\n        self.wait(1)\n        rect = Rectangle(width=4, height=2, color=GREEN)\n        text = Text('Comprehensive Testing', font_size=36).next_to(rect, DOWN)\n        self.play(Create(rect), Write(text))\n        self.wait(2)",
          "voice_over": "This standardized evaluation framework helps ensure AI systems are developed with better understanding, ethical considerations and practical capabilities."
        }
      ]
    }
  },
  "cc6af508-a2be-43fa-87f3-4c5fd596fe57": {
    "job_id": "cc6af508-a2be-43fa-87f3-4c5fd596fe57",
    "status": "completed",
    "created_at": "2025-07-13T00:11:30.928216",
    "pdf_source": "uploads/8fedc9fe-e811-4cab-84b8-ccec85cd0dfc_research_paper_2.pdf",
    "original_filename": "research_paper_2.pdf",
    "video_name": null,
    "completed_at": "2025-07-13T00:12:07.761140",
    "video_path": "outputs/video_cc6af508-a2be-43fa-87f3-4c5fd596fe57.mp4",
    "generation_metrics": {
      "video_path": "outputs/video_cc6af508-a2be-43fa-87f3-4c5fd596fe57.mp4",
      "total_clips": 4,
      "successful_clips": 4,
      "failed_clips": 0,
      "success_rate": 1.0,
      "pdf_path": "uploads/8fedc9fe-e811-4cab-84b8-ccec85cd0dfc_research_paper_2.pdf",
      "clips_config": [
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('DIKWP AI Evaluation Model', font_size=48).to_edge(UP)\n        self.play(Write(title))\n        self.wait(1)\n        diagram = Rectangle(width=4, height=3, color=BLUE).move_to(ORIGIN)\n        text = Text('A new framework for testing AI systems', font_size=36).next_to(diagram, DOWN)\n        self.play(Create(diagram), Write(text))\n        self.wait(2)",
          "voice_over": "The DIKWP model introduces a comprehensive framework for evaluating artificial intelligence systems. It provides a structured approach to assess AI capabilities across multiple dimensions."
        },
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('Core Components', font_size=48).to_edge(UP)\n        self.play(Write(title))\n        self.wait(1)\n        elements = VGroup(\n            Circle(radius=0.5, color=BLUE).shift(LEFT*2),\n            Circle(radius=0.5, color=RED),\n            Circle(radius=0.5, color=GREEN).shift(RIGHT*2)\n        )\n        labels = VGroup(\n            Text('Data', font_size=32).next_to(elements[0], DOWN),\n            Text('Knowledge', font_size=32).next_to(elements[1], DOWN),\n            Text('Purpose', font_size=32).next_to(elements[2], DOWN)\n        )\n        self.play(Create(elements), Write(labels))\n        self.wait(2)",
          "voice_over": "At its core, DIKWP integrates Data, Knowledge, and Purpose into a unified evaluation system. These components work together to assess AI capabilities holistically."
        },
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('Evaluation Process', font_size=48).to_edge(UP)\n        self.play(Write(title))\n        self.wait(1)\n        arrow = Arrow(LEFT*3, RIGHT*3, color=BLUE)\n        steps = VGroup(\n            Text('Input', font_size=36).shift(LEFT*3),\n            Text('Analysis', font_size=36),\n            Text('Output', font_size=36).shift(RIGHT*3)\n        )\n        self.play(Create(arrow), Write(steps))\n        self.wait(2)",
          "voice_over": "The evaluation process flows from input through analysis to output. This systematic approach ensures comprehensive assessment of AI systems across multiple dimensions."
        },
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('Impact on AI Development', font_size=48).to_edge(UP)\n        self.play(Write(title))\n        self.wait(1)\n        circle = Circle(radius=2, color=GREEN)\n        checkmark = Text('\u2713', font_size=72, color=GREEN).move_to(circle)\n        text = Text('Standardized AI Evaluation', font_size=36).next_to(circle, DOWN)\n        self.play(Create(circle), Write(checkmark), Write(text))\n        self.wait(2)",
          "voice_over": "By providing standardized evaluation metrics, the DIKWP model helps ensure more reliable and ethical AI development. This framework marks a significant step forward in AI testing methodology."
        }
      ]
    }
  },
  "30e1883c-bb79-4e6e-bd37-1e9463503da3": {
    "job_id": "30e1883c-bb79-4e6e-bd37-1e9463503da3",
    "status": "completed",
    "created_at": "2025-07-13T00:22:16.895856",
    "pdf_source": "https://www.w3.org/WAI/ER/tests/xhtml/testfiles/resources/pdf/dummy.pdf",
    "quality": "medium_quality",
    "video_name": null,
    "completed_at": "2025-07-13T00:22:43.672505",
    "video_path": "outputs/video_30e1883c-bb79-4e6e-bd37-1e9463503da3.mp4",
    "generation_metrics": {
      "video_path": "outputs/video_30e1883c-bb79-4e6e-bd37-1e9463503da3.mp4",
      "total_clips": 4,
      "successful_clips": 4,
      "failed_clips": 0,
      "success_rate": 1.0,
      "pdf_url": "https://www.w3.org/WAI/ER/tests/xhtml/testfiles/resources/pdf/dummy.pdf",
      "clips_config": [
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('Understanding PDFs', font_size=48).to_edge(UP)\n        self.play(Write(title))\n        self.wait(1)\n        doc = Rectangle(height=3, width=2, color=BLUE)\n        self.play(Create(doc))\n        self.wait(2)\n        text = Text('Digital Documents', font_size=36).next_to(doc, DOWN)\n        self.play(FadeIn(text))\n        self.wait(1)",
          "voice_over": "PDFs have become the standard format for sharing documents digitally. Let's explore what makes them so useful."
        },
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('PDF Structure', font_size=48).to_edge(UP)\n        self.play(Write(title))\n        self.wait(1)\n        layers = VGroup(*[Rectangle(height=0.8, width=2, color=BLUE) for _ in range(3)]).arrange(DOWN, buff=0.3)\n        self.play(Create(layers))\n        self.wait(2)\n        text = Text('Layered Content', font_size=36).next_to(layers, DOWN)\n        self.play(FadeIn(text))\n        self.wait(1)",
          "voice_over": "A PDF file consists of multiple layers that combine text, images, and formatting. This structure ensures consistent viewing across devices."
        },
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('PDF Components', font_size=48).to_edge(UP)\n        self.play(Write(title))\n        self.wait(1)\n        elements = VGroup(\n            Square(side_length=1, color=GREEN),\n            Circle(radius=0.5, color=RED)\n        ).arrange(RIGHT, buff=1)\n        self.play(Create(elements))\n        arrows = Arrow(elements[0], elements[1], color=WHITE)\n        self.play(Create(arrows))\n        self.wait(1)",
          "voice_over": "PDFs seamlessly integrate different elements like text and graphics, maintaining their original quality and positioning."
        },
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('Universal Access', font_size=48).to_edge(UP)\n        self.play(Write(title))\n        self.wait(1)\n        circle = Circle(radius=1.5, color=BLUE)\n        self.play(Create(circle))\n        self.wait(2)\n        text = Text('Available Everywhere', font_size=36).next_to(circle, DOWN)\n        self.play(FadeIn(text))\n        self.wait(1)",
          "voice_over": "This universal format ensures that documents look identical across all platforms, making PDFs the go-to choice for professional document sharing."
        }
      ]
    }
  },
  "c0ec6090-9949-42a9-86d6-3c4401b10061": {
    "job_id": "c0ec6090-9949-42a9-86d6-3c4401b10061",
    "status": "completed",
    "created_at": "2025-07-13T00:27:05.601234",
    "pdf_source": "https://www.w3.org/WAI/ER/tests/xhtml/testfiles/resources/pdf/dummy.pdf",
    "quality": "medium_quality",
    "video_name": null,
    "completed_at": "2025-07-13T00:27:27.185534",
    "video_path": "outputs/video_c0ec6090-9949-42a9-86d6-3c4401b10061.mp4",
    "generation_metrics": {
      "video_path": "outputs/video_c0ec6090-9949-42a9-86d6-3c4401b10061.mp4",
      "total_clips": 4,
      "successful_clips": 2,
      "failed_clips": 0,
      "success_rate": 0.5,
      "pdf_url": "https://www.w3.org/WAI/ER/tests/xhtml/testfiles/resources/pdf/dummy.pdf",
      "clips_config": [
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('Understanding PDF Documents', font_size=48).to_edge(UP)\n        self.play(Write(title))\n        self.wait(1)\n        doc = Rectangle(height=3, width=2, color=BLUE)\n        self.play(Create(doc))\n        self.wait(2)\n        text = Text('Digital Format', font_size=36).next_to(doc, DOWN)\n        self.play(FadeIn(text))\n        self.wait(1)",
          "voice_over": "PDF documents have become the standard format for sharing information digitally. Let's explore what makes them so useful."
        },
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('Key Features', font_size=48).to_edge(UP)\n        self.play(Write(title))\n        self.wait(1)\n        circle = Circle(radius=1.5, color=GREEN)\n        text = Text('Universal\nCompatibility', font_size=36).move_to(circle)\n        self.play(Create(circle), Write(text))\n        self.wait(2)",
          "voice_over": "PDFs maintain their formatting across all devices and platforms, ensuring consistent viewing everywhere."
        },
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('How PDFs Work', font_size=48).to_edge(UP)\n        self.play(Write(title))\n        self.wait(1)\n        rect1 = Rectangle(height=1, width=2, color=BLUE).shift(LEFT*2)\n        rect2 = Rectangle(height=1, width=2, color=BLUE).shift(RIGHT*2)\n        arrow = Arrow(rect1.get_right(), rect2.get_left(), color=WHITE)\n        self.play(Create(rect1), Create(arrow), Create(rect2))\n        self.wait(2)",
          "voice_over": "PDFs package content and formatting into a single file, preserving the exact layout during sharing."
        },
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('Benefits', font_size=48).to_edge(UP)\n        self.play(Write(title))\n        self.wait(1)\n        square = Square(side_length=2, color=GREEN)\n        text = Text('Secure &\nReliable', font_size=36).move_to(square)\n        self.play(Create(square), Write(text))\n        self.wait(2)",
          "voice_over": "PDFs provide security features and reliable document sharing, making them essential for business and personal use."
        }
      ]
    }
  },
  "20159fab-1c23-4680-82a0-20e0cccee701": {
    "job_id": "20159fab-1c23-4680-82a0-20e0cccee701",
    "status": "completed",
    "created_at": "2025-07-13T00:39:32.915854",
    "pdf_source": "https://www.w3.org/WAI/ER/tests/xhtml/testfiles/resources/pdf/dummy.pdf",
    "quality": "medium_quality",
    "video_name": null,
    "completed_at": "2025-07-13T00:39:57.882835",
    "video_path": "outputs/video_20159fab-1c23-4680-82a0-20e0cccee701.mp4",
    "generation_metrics": {
      "video_path": "outputs/video_20159fab-1c23-4680-82a0-20e0cccee701.mp4",
      "total_clips": 4,
      "successful_clips": 4,
      "failed_clips": 0,
      "success_rate": 1.0,
      "pdf_url": "https://www.w3.org/WAI/ER/tests/xhtml/testfiles/resources/pdf/dummy.pdf",
      "clips_config": [
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('Understanding PDF Documents', font_size=48).to_edge(UP)\n        self.play(Write(title))\n        self.wait(1)\n        doc = Rectangle(height=3, width=2, color=BLUE)\n        self.play(Create(doc))\n        self.wait(2)\n        text = Text('Digital Document Format', font_size=36).shift(DOWN*2)\n        self.play(FadeIn(text))\n        self.wait(1)",
          "voice_over": "PDF documents have become the standard for sharing digital information. Let's explore what makes them so important."
        },
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('Universal Compatibility', font_size=48).to_edge(UP)\n        self.play(Write(title))\n        self.wait(1)\n        devices = VGroup(\n            Square(side_length=1, color=GREEN),\n            Square(side_length=1, color=GREEN),\n            Square(side_length=1, color=GREEN)\n        ).arrange(RIGHT, buff=1)\n        self.play(Create(devices))\n        self.wait(2)",
          "voice_over": "PDFs work consistently across all devices and platforms, maintaining their format and appearance wherever they're opened."
        },
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('PDF Structure', font_size=48).to_edge(UP)\n        self.play(Write(title))\n        self.wait(1)\n        layers = VGroup(\n            Rectangle(height=0.5, width=2, color=BLUE),\n            Rectangle(height=0.5, width=2, color=BLUE),\n            Rectangle(height=0.5, width=2, color=BLUE)\n        ).arrange(DOWN, buff=0.5)\n        self.play(Create(layers))\n        self.wait(2)",
          "voice_over": "PDFs are built in layers, combining text, images, and formatting into a single, secure document format."
        },
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('Benefits of PDFs', font_size=48).to_edge(UP)\n        self.play(Write(title))\n        self.wait(1)\n        circle = Circle(radius=1, color=GREEN)\n        checkmark = Text('\u2713', font_size=72, color=WHITE).move_to(circle)\n        self.play(Create(circle))\n        self.play(Write(checkmark))\n        self.wait(2)",
          "voice_over": "With their reliability and universal support, PDFs remain essential for professional document sharing and archiving."
        }
      ]
    }
  },
  "af3c85b6-7323-4681-b09f-4f17daa30950": {
    "job_id": "af3c85b6-7323-4681-b09f-4f17daa30950",
    "status": "failed",
    "created_at": "2025-07-13T00:50:31.050656",
    "pdf_source": "https://arxiv.org/pdf/2401.12345.pdf",
    "quality": "medium_quality",
    "video_name": null,
    "error": "Error code: 400 - {'type': 'error', 'error': {'type': 'invalid_request_error', 'message': 'Only HTTPS URLs are supported.'}}"
  },
  "ebbd9d52-a9fa-48f0-b80f-179777918549": {
    "job_id": "ebbd9d52-a9fa-48f0-b80f-179777918549",
    "status": "failed",
    "created_at": "2025-07-13T00:50:42.962887",
    "pdf_source": "https://arxiv.org/pdf/2301.07041.pdf",
    "quality": "medium_quality",
    "video_name": null,
    "error": "Error code: 400 - {'type': 'error', 'error': {'type': 'invalid_request_error', 'message': 'Only HTTPS URLs are supported.'}}"
  },
  "87553143-1382-4a67-ba89-7a0e2e064724": {
    "job_id": "87553143-1382-4a67-ba89-7a0e2e064724",
    "status": "completed",
    "created_at": "2025-07-13T00:51:56.364794",
    "pdf_source": "uploads/ba8a88ad-8adf-475b-b1ca-5513d3793710_1752363261041-molecules-19-19066.pdf",
    "original_filename": "1752363261041-molecules-19-19066.pdf",
    "video_name": null,
    "completed_at": "2025-07-13T00:52:20.789579",
    "video_path": "outputs/video_87553143-1382-4a67-ba89-7a0e2e064724.mp4",
    "generation_metrics": {
      "video_path": "outputs/video_87553143-1382-4a67-ba89-7a0e2e064724.mp4",
      "total_clips": 4,
      "successful_clips": 2,
      "failed_clips": 0,
      "success_rate": 0.5,
      "pdf_path": "uploads/ba8a88ad-8adf-475b-b1ca-5513d3793710_1752363261041-molecules-19-19066.pdf",
      "clips_config": [
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('BPC 157: A Novel Healing Peptide', font_size=48).to_edge(UP)\n        subtitle = Text('Discovered in human gastric juice', font_size=36).shift(DOWN*0.5)\n        self.play(Write(title))\n        self.wait(1)\n        self.play(FadeIn(subtitle))\n        self.wait(2)",
          "voice_over": "BPC 157 is a remarkable peptide discovered in human gastric juice that shows promising healing properties across multiple tissues."
        },
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('Growth Hormone Receptor Enhancement', font_size=48).to_edge(UP)\n        circle = Circle(radius=1.5, color=BLUE).move_to(ORIGIN)\n        label = Text('Tendon\nFibroblasts', font_size=32).move_to(circle.get_center())\n        self.play(Write(title))\n        self.wait(1)\n        self.play(Create(circle), Write(label))\n        self.wait(2)",
          "voice_over": "BPC 157 works by enhancing growth hormone receptors in tendon fibroblasts, the key cells responsible for tendon healing."
        },
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('Activation Mechanism', font_size=48).to_edge(UP)\n        rect1 = Rectangle(height=1, width=2, color=GREEN).shift(LEFT*2)\n        rect2 = Rectangle(height=1, width=2, color=GREEN).shift(RIGHT*2)\n        arrow = Arrow(rect1.get_right(), rect2.get_left(), color=WHITE)\n        self.play(Write(title))\n        self.wait(1)\n        self.play(Create(rect1), Create(arrow), Create(rect2))\n        self.wait(2)",
          "voice_over": "When BPC 157 increases receptor expression, it enables growth hormone to better stimulate cell growth and healing."
        },
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('Accelerated Healing', font_size=48).to_edge(UP)\n        result = Text('\u2713 Faster Recovery\n\u2713 Enhanced Cell Growth\n\u2713 Better Tissue Repair', font_size=36).shift(UP*0.5)\n        self.play(Write(title))\n        self.wait(1)\n        self.play(Write(result))\n        self.wait(2)",
          "voice_over": "This mechanism leads to accelerated healing, making BPC 157 a promising therapeutic option for tendon injuries and tissue repair."
        }
      ]
    }
  },
  "2005c715-852b-4d61-b87e-b73a676dd1fc": {
    "job_id": "2005c715-852b-4d61-b87e-b73a676dd1fc",
    "status": "completed",
    "created_at": "2025-07-13T00:53:48.140623",
    "pdf_source": "uploads/c439935a-7146-40d9-8bdd-0639ac21afd1_1752363261041-molecules-19-19066.pdf",
    "original_filename": "1752363261041-molecules-19-19066.pdf",
    "video_name": null,
    "completed_at": "2025-07-13T00:54:18.572552",
    "video_path": "outputs/video_2005c715-852b-4d61-b87e-b73a676dd1fc.mp4",
    "generation_metrics": {
      "video_path": "outputs/video_2005c715-852b-4d61-b87e-b73a676dd1fc.mp4",
      "total_clips": 4,
      "successful_clips": 4,
      "failed_clips": 0,
      "success_rate": 1.0,
      "pdf_path": "uploads/c439935a-7146-40d9-8bdd-0639ac21afd1_1752363261041-molecules-19-19066.pdf",
      "clips_config": [
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('BPC 157: A Healing Peptide', font_size=48).to_edge(UP)\n        subtitle = Text('A peptide derived from gastric juice', font_size=36).shift(DOWN*0.5)\n        self.play(Write(title))\n        self.wait(1)\n        self.play(FadeIn(subtitle))\n        self.wait(3)",
          "voice_over": "BPC 157 is a remarkable peptide discovered in human gastric juice that shows promising healing properties across multiple tissues."
        },
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('Growth Hormone Receptor Enhancement', font_size=48).to_edge(UP)\n        circle = Circle(radius=1.5, color=BLUE).move_to(ORIGIN)\n        receptor = Text('GH Receptor', font_size=32).move_to(circle.get_center())\n        self.play(Write(title))\n        self.wait(1)\n        self.play(Create(circle), Write(receptor))\n        self.wait(3)",
          "voice_over": "BPC 157 works by increasing growth hormone receptors on tendon cells, enhancing their ability to respond to natural healing signals."
        },
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('Activation Mechanism', font_size=48).to_edge(UP)\n        rect1 = Rectangle(height=1, width=2, color=GREEN).shift(LEFT*2)\n        rect2 = Rectangle(height=1, width=2, color=GREEN).shift(RIGHT*2)\n        arrow = Arrow(rect1.get_right(), rect2.get_left(), color=WHITE)\n        self.play(Write(title))\n        self.wait(1)\n        self.play(Create(rect1), Create(arrow), Create(rect2))\n        self.wait(3)",
          "voice_over": "When growth hormone binds to these enhanced receptors, it triggers a cascade of healing processes in the tendon cells."
        },
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('Improved Tendon Healing', font_size=48).to_edge(UP)\n        result = Text('Faster Recovery', font_size=36).shift(UP*0.5)\n        line = Line(start=LEFT*3, end=RIGHT*3, color=BLUE).shift(DOWN*0.5)\n        self.play(Write(title))\n        self.wait(1)\n        self.play(Write(result), Create(line))\n        self.wait(3)",
          "voice_over": "This leads to accelerated tendon healing and potentially better recovery outcomes for tendon injuries."
        }
      ]
    }
  },
  "c4fc892e-66b2-4b81-8ece-fb0ec35d2e03": {
    "job_id": "c4fc892e-66b2-4b81-8ece-fb0ec35d2e03",
    "status": "completed",
    "created_at": "2025-07-13T00:55:05.255256",
    "pdf_source": "uploads/992b7e31-77e3-4d22-82ac-d16cb66b9fb6_1752363261041-molecules-19-19066.pdf",
    "original_filename": "1752363261041-molecules-19-19066.pdf",
    "video_name": null,
    "completed_at": "2025-07-13T00:55:35.496096",
    "video_path": "outputs/video_c4fc892e-66b2-4b81-8ece-fb0ec35d2e03.mp4",
    "generation_metrics": {
      "video_path": "outputs/video_c4fc892e-66b2-4b81-8ece-fb0ec35d2e03.mp4",
      "total_clips": 4,
      "successful_clips": 4,
      "failed_clips": 0,
      "success_rate": 1.0,
      "pdf_path": "uploads/992b7e31-77e3-4d22-82ac-d16cb66b9fb6_1752363261041-molecules-19-19066.pdf",
      "clips_config": [
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('BPC 157: A Healing Peptide', font_size=48).to_edge(UP)\n        self.play(Write(title))\n        self.wait(1)\n        subtitle = Text('A unique peptide that helps heal tendons', font_size=36).shift(DOWN*0.5)\n        self.play(FadeIn(subtitle))\n        self.wait(2)\n        self.wait(1)",
          "voice_over": "BPC 157 is a remarkable peptide discovered in human gastric juice that shows promising effects in healing damaged tendons and other tissues."
        },
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('Growth Hormone Receptor Enhancement', font_size=48).to_edge(UP)\n        self.play(Write(title))\n        self.wait(1)\n        receptor = Circle(radius=1, color=BLUE).move_to(ORIGIN)\n        label = Text('GH Receptor', font_size=32).next_to(receptor, DOWN)\n        self.play(Create(receptor), FadeIn(label))\n        self.wait(2)\n        self.wait(1)",
          "voice_over": "BPC 157 works by increasing growth hormone receptors on tendon cells, making them more responsive to natural healing signals."
        },
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('Mechanism of Action', font_size=48).to_edge(UP)\n        self.play(Write(title))\n        self.wait(1)\n        arrow = Arrow(LEFT*2, RIGHT*2, color=GREEN)\n        labels = VGroup(\n            Text('BPC 157', font_size=32).next_to(arrow, LEFT),\n            Text('Cell Growth', font_size=32).next_to(arrow, RIGHT)\n        )\n        self.play(Create(arrow), FadeIn(labels))\n        self.wait(2)",
          "voice_over": "When BPC 157 increases growth hormone receptors, cells become more responsive to growth signals, leading to enhanced tissue repair."
        },
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('Healing Benefits', font_size=48).to_edge(UP)\n        self.play(Write(title))\n        self.wait(1)\n        rectangle = Rectangle(height=2, width=3, color=BLUE).move_to(ORIGIN)\n        points = VGroup(\n            Text('\u2022 Faster Healing', font_size=32),\n            Text('\u2022 Stronger Recovery', font_size=32)\n        ).arrange(DOWN).move_to(rectangle)\n        self.play(Create(rectangle), FadeIn(points))\n        self.wait(2)",
          "voice_over": "This enhanced healing response leads to faster recovery and stronger tissue repair, potentially revolutionizing how we treat tendon injuries."
        }
      ]
    }
  },
  "a76a326c-3d77-41e6-9392-1e49908ceb97": {
    "job_id": "a76a326c-3d77-41e6-9392-1e49908ceb97",
    "status": "completed",
    "created_at": "2025-07-13T00:56:37.463111",
    "pdf_source": "uploads/a83bcc5a-f88d-4ecd-b314-f5260f279759_1752363261041-molecules-19-19066.pdf",
    "original_filename": "1752363261041-molecules-19-19066.pdf",
    "video_name": null,
    "completed_at": "2025-07-13T00:57:05.528336",
    "video_path": "outputs/video_a76a326c-3d77-41e6-9392-1e49908ceb97.mp4",
    "generation_metrics": {
      "video_path": "outputs/video_a76a326c-3d77-41e6-9392-1e49908ceb97.mp4",
      "total_clips": 4,
      "successful_clips": 4,
      "failed_clips": 0,
      "success_rate": 1.0,
      "pdf_path": "uploads/a83bcc5a-f88d-4ecd-b314-f5260f279759_1752363261041-molecules-19-19066.pdf",
      "clips_config": [
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('BPC 157: A Novel Healing Peptide', font_size=48).to_edge(UP)\n        subtitle = Text('Discovered in gastric juice', font_size=36).shift(DOWN)\n        self.play(Write(title))\n        self.wait(1)\n        self.play(FadeIn(subtitle))\n        self.wait(1)",
          "voice_over": "BPC 157 is a remarkable peptide first discovered in human gastric juice that shows promising healing properties across multiple tissues."
        },
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('Growth Hormone Receptor Enhancement', font_size=48).to_edge(UP)\n        circle = Circle(radius=1.5, color=BLUE).move_to(ORIGIN)\n        arrow = Arrow(start=LEFT, end=RIGHT, color=WHITE).next_to(circle, RIGHT)\n        self.play(Write(title))\n        self.wait(1)\n        self.play(Create(circle), Create(arrow))\n        self.wait(1)",
          "voice_over": "BPC 157's key mechanism involves enhancing growth hormone receptors in tendon cells, amplifying their natural healing response."
        },
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('Cellular Response', font_size=48).to_edge(UP)\n        rect1 = Rectangle(height=1, width=2, color=GREEN).shift(LEFT*2)\n        rect2 = Rectangle(height=2, width=2, color=GREEN).shift(RIGHT*2)\n        arrow = Arrow(start=rect1.get_right(), end=rect2.get_left(), color=WHITE)\n        self.play(Write(title))\n        self.wait(1)\n        self.play(Create(rect1), Create(arrow), Create(rect2))\n        self.wait(1)",
          "voice_over": "When treated with BPC 157, tendon cells show increased receptor expression, leading to enhanced growth hormone signaling and cellular regeneration."
        },
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('Healing Potential', font_size=48).to_edge(UP)\n        result = Text('Faster Tissue Recovery', font_size=36).shift(UP*0.5)\n        line = Line(start=LEFT*3, end=RIGHT*3, color=BLUE).shift(DOWN)\n        self.play(Write(title))\n        self.wait(1)\n        self.play(FadeIn(result), Create(line))\n        self.wait(1)",
          "voice_over": "This discovery opens new possibilities for treating tendon injuries, potentially leading to faster and more effective healing outcomes."
        }
      ]
    }
  },
  "2186e818-fa4b-47ba-b6e3-bc9b4bd394ab": {
    "job_id": "2186e818-fa4b-47ba-b6e3-bc9b4bd394ab",
    "status": "completed",
    "created_at": "2025-07-13T00:58:37.881301",
    "pdf_source": "uploads/10676ca2-2097-420c-bea3-332215d4e108_1752363261041-molecules-19-19066.pdf",
    "original_filename": "1752363261041-molecules-19-19066.pdf",
    "video_name": null,
    "completed_at": "2025-07-13T00:59:09.421414",
    "video_path": "outputs/video_2186e818-fa4b-47ba-b6e3-bc9b4bd394ab.mp4",
    "generation_metrics": {
      "video_path": "outputs/video_2186e818-fa4b-47ba-b6e3-bc9b4bd394ab.mp4",
      "total_clips": 4,
      "successful_clips": 4,
      "failed_clips": 0,
      "success_rate": 1.0,
      "pdf_path": "uploads/10676ca2-2097-420c-bea3-332215d4e108_1752363261041-molecules-19-19066.pdf",
      "clips_config": [
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('BPC 157 and Tendon Healing', font_size=48).to_edge(UP)\n        self.play(Write(title))\n        self.wait(1)\n        subtitle = Text('A peptide that promotes tissue repair', font_size=36).shift(DOWN*0.5)\n        self.play(FadeIn(subtitle))\n        self.wait(2)\n        self.wait(1)",
          "voice_over": "BPC 157 is a remarkable peptide derived from human gastric juice that shows promise in accelerating tissue healing, particularly in tendons."
        },
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('Growth Hormone Receptor', font_size=48).to_edge(UP)\n        self.play(Write(title))\n        self.wait(1)\n        receptor = Circle(radius=1.5, color=BLUE).move_to(ORIGIN)\n        self.play(Create(receptor))\n        self.wait(2)\n        label = Text('Increased Expression', font_size=36).shift(DOWN*2)\n        self.play(FadeIn(label))\n        self.wait(1)",
          "voice_over": "BPC 157 works by enhancing the expression of growth hormone receptors on tendon cells, creating more binding sites for natural healing factors."
        },
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('Activation Mechanism', font_size=48).to_edge(UP)\n        self.play(Write(title))\n        self.wait(1)\n        arrow = Arrow(LEFT*2, RIGHT*2, color=GREEN)\n        self.play(Create(arrow))\n        self.wait(2)\n        text = Text('JAK2 Signaling Pathway', font_size=36).shift(DOWN*1.5)\n        self.play(FadeIn(text))\n        self.wait(1)",
          "voice_over": "When growth hormone binds to these receptors, it triggers the JAK2 signaling pathway, stimulating cell growth and repair."
        },
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('Enhanced Healing', font_size=48).to_edge(UP)\n        self.play(Write(title))\n        self.wait(1)\n        rect = Rectangle(height=2, width=3, color=BLUE).move_to(ORIGIN)\n        self.play(Create(rect))\n        self.wait(2)\n        result = Text('Faster Tendon Recovery', font_size=36).shift(DOWN*2)\n        self.play(FadeIn(result))\n        self.wait(1)",
          "voice_over": "This enhanced receptor expression leads to more effective healing, potentially revolutionizing how we treat tendon injuries."
        }
      ]
    }
  },
  "ca6a1e12-8dd0-4e4e-bd80-968b6eb28e8e": {
    "job_id": "ca6a1e12-8dd0-4e4e-bd80-968b6eb28e8e",
    "status": "completed",
    "created_at": "2025-07-13T01:00:15.236182",
    "pdf_source": "uploads/55ea49da-fb6c-469e-b0bd-f5de666d8f35_1752363261041-molecules-19-19066.pdf",
    "original_filename": "1752363261041-molecules-19-19066.pdf",
    "video_name": null,
    "completed_at": "2025-07-13T01:00:47.257782",
    "video_path": "outputs/video_ca6a1e12-8dd0-4e4e-bd80-968b6eb28e8e.mp4",
    "generation_metrics": {
      "video_path": "outputs/video_ca6a1e12-8dd0-4e4e-bd80-968b6eb28e8e.mp4",
      "total_clips": 4,
      "successful_clips": 4,
      "failed_clips": 0,
      "success_rate": 1.0,
      "pdf_path": "uploads/55ea49da-fb6c-469e-b0bd-f5de666d8f35_1752363261041-molecules-19-19066.pdf",
      "clips_config": [
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('BPC 157: A Peptide for Tendon Healing', font_size=48).to_edge(UP)\n        self.play(Write(title))\n        self.wait(1)\n        problem = Text('Tendon injuries are difficult to heal', font_size=36).shift(UP*0.5)\n        self.play(FadeIn(problem))\n        self.wait(2)\n        self.wait(1)",
          "voice_over": "Tendon injuries are a common problem in sports medicine, with healing being particularly challenging and time-consuming. Scientists have discovered a promising peptide called BPC 157."
        },
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('Growth Hormone Receptor Enhancement', font_size=48).to_edge(UP)\n        self.play(Write(title))\n        self.wait(1)\n        receptor = Circle(radius=1, color=BLUE).move_to(ORIGIN)\n        self.play(Create(receptor))\n        label = Text('GH Receptor', font_size=32).next_to(receptor, DOWN)\n        self.play(FadeIn(label))\n        self.wait(1)",
          "voice_over": "BPC 157 works by increasing growth hormone receptors on tendon cells. These receptors are crucial for tissue healing and regeneration."
        },
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('Mechanism of Action', font_size=48).to_edge(UP)\n        self.play(Write(title))\n        self.wait(1)\n        arrow = Arrow(LEFT*2, RIGHT*2, color=GREEN)\n        self.play(Create(arrow))\n        text = Text('BPC 157 \u2192 More Receptors \u2192 Better Healing', font_size=32).shift(DOWN)\n        self.play(FadeIn(text))\n        self.wait(1)",
          "voice_over": "When BPC 157 is applied, it triggers an increase in growth hormone receptors. This enhancement allows cells to better respond to natural healing signals."
        },
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('Clinical Impact', font_size=48).to_edge(UP)\n        self.play(Write(title))\n        self.wait(1)\n        result = Rectangle(height=2, width=3, color=BLUE).move_to(ORIGIN)\n        self.play(Create(result))\n        impact = Text('Faster and stronger healing', font_size=36).next_to(result, DOWN)\n        self.play(FadeIn(impact))\n        self.wait(1)",
          "voice_over": "This discovery could revolutionize tendon injury treatment, potentially leading to faster recovery times and stronger healing outcomes for patients."
        }
      ]
    }
  },
  "c61fe531-358c-4040-a93d-821296415af0": {
    "job_id": "c61fe531-358c-4040-a93d-821296415af0",
    "status": "completed",
    "created_at": "2025-07-13T01:02:40.998865",
    "pdf_source": "uploads/79f0cecb-744f-43a6-bdef-1f4af1a21ed2_1752363261041-molecules-19-19066.pdf",
    "original_filename": "1752363261041-molecules-19-19066.pdf",
    "video_name": null,
    "completed_at": "2025-07-13T01:03:08.855893",
    "video_path": "outputs/video_c61fe531-358c-4040-a93d-821296415af0.mp4",
    "generation_metrics": {
      "video_path": "outputs/video_c61fe531-358c-4040-a93d-821296415af0.mp4",
      "total_clips": 4,
      "successful_clips": 4,
      "failed_clips": 0,
      "success_rate": 1.0,
      "pdf_path": "uploads/79f0cecb-744f-43a6-bdef-1f4af1a21ed2_1752363261041-molecules-19-19066.pdf",
      "clips_config": [
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('Tendon Healing Research', font_size=48).to_edge(UP)\n        self.play(Write(title))\n        self.wait(1)\n        circle = Circle(radius=1, color=RED).move_to(ORIGIN)\n        injury = Text('Injury', font_size=36).next_to(circle, DOWN)\n        self.play(Create(circle), FadeIn(injury))\n        self.wait(2)",
          "voice_over": "Tendon injuries are one of the most frequent problems in sports medicine. The healing process is slow and often results in weaker tissue than before."
        },
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('BPC 157 Peptide', font_size=48).to_edge(UP)\n        self.play(Write(title))\n        self.wait(1)\n        rect = Rectangle(height=2, width=3, color=BLUE).move_to(ORIGIN)\n        formula = Text('15 Amino Acids', font_size=36).next_to(rect, DOWN)\n        self.play(Create(rect), FadeIn(formula))\n        self.wait(2)",
          "voice_over": "BPC 157 is a special peptide made of 15 amino acids that shows promise in accelerating tissue healing and repair."
        },
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('Growth Hormone Reception', font_size=48).to_edge(UP)\n        self.play(Write(title))\n        self.wait(1)\n        cell = Circle(radius=1.5, color=GREEN)\n        arrow = Arrow(LEFT, RIGHT, color=WHITE)\n        receptor = Dot(color=YELLOW)\n        group = VGroup(cell, arrow, receptor).arrange(RIGHT)\n        self.play(Create(group))\n        self.wait(2)",
          "voice_over": "BPC 157 works by enhancing growth hormone receptor expression in tendon cells, making them more responsive to healing signals."
        },
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('Improved Healing', font_size=48).to_edge(UP)\n        self.play(Write(title))\n        self.wait(1)\n        before = Rectangle(height=2, width=1, color=RED).shift(LEFT*2)\n        after = Rectangle(height=2, width=1, color=GREEN).shift(RIGHT*2)\n        arrow = Arrow(before.get_right(), after.get_left(), color=WHITE)\n        self.play(Create(VGroup(before, arrow, after)))\n        self.wait(2)",
          "voice_over": "This discovery could lead to more effective treatments for tendon injuries, potentially reducing healing time and improving tissue strength."
        }
      ]
    }
  },
  "e3f37609-ff50-4d65-b24e-41edef2fecde": {
    "job_id": "e3f37609-ff50-4d65-b24e-41edef2fecde",
    "status": "completed",
    "created_at": "2025-07-13T01:12:07.135458",
    "pdf_source": "uploads/1b846304-8b33-425e-9693-7d8e071b8678_research_paper_1.pdf",
    "original_filename": "research_paper_1.pdf",
    "video_name": null,
    "completed_at": "2025-07-13T01:12:33.018298",
    "video_path": "outputs/video_e3f37609-ff50-4d65-b24e-41edef2fecde.mp4",
    "generation_metrics": {
      "video_path": "outputs/video_e3f37609-ff50-4d65-b24e-41edef2fecde.mp4",
      "total_clips": 4,
      "successful_clips": 4,
      "failed_clips": 0,
      "success_rate": 1.0,
      "pdf_path": "uploads/1b846304-8b33-425e-9693-7d8e071b8678_research_paper_1.pdf",
      "clips_config": [
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('Artificial Intelligence', font_size=48).to_edge(UP)\n        self.play(Write(title))\n        self.wait(1)\n        circle = Circle(radius=1.5, color=BLUE)\n        brain = Text('Computer Intelligence', font_size=36).next_to(circle, DOWN)\n        self.play(Create(circle), Write(brain))\n        self.wait(1)",
          "voice_over": "Artificial Intelligence is the field of computer science focused on making machines behave like humans. It represents one of technology's greatest challenges."
        },
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('Core AI Capabilities', font_size=48).to_edge(UP)\n        self.play(Write(title))\n        rect = Rectangle(height=3, width=4, color=GREEN)\n        capabilities = Text('Games \u2022 Language \u2022 Vision', font_size=36).move_to(rect)\n        self.play(Create(rect), Write(capabilities))\n        self.wait(1)",
          "voice_over": "Modern AI systems excel at specific tasks like playing games, processing language, and computer vision. However, they still can't match general human intelligence."
        },
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('How AI Works', font_size=48).to_edge(UP)\n        self.play(Write(title))\n        input_box = Square(side_length=1, color=BLUE).shift(LEFT*2)\n        output_box = Square(side_length=1, color=BLUE).shift(RIGHT*2)\n        arrow = Arrow(input_box.get_right(), output_box.get_left(), color=BLUE)\n        self.play(Create(input_box), Create(arrow), Create(output_box))\n        self.wait(1)",
          "voice_over": "AI systems learn by processing large amounts of data, identifying patterns, and making predictions based on what they've learned."
        },
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('Future Impact', font_size=48).to_edge(UP)\n        self.play(Write(title))\n        circle1 = Circle(radius=0.5, color=YELLOW).shift(LEFT*2)\n        circle2 = Circle(radius=1, color=YELLOW)\n        circle3 = Circle(radius=1.5, color=YELLOW).shift(RIGHT*2)\n        self.play(Create(circle1), Create(circle2), Create(circle3))\n        self.wait(1)",
          "voice_over": "As AI continues to advance, it will transform industries, enhance human capabilities, and create new opportunities for innovation and growth."
        }
      ]
    }
  },
  "1924f0d4-f1ed-4e0f-ad52-233243f6b224": {
    "job_id": "1924f0d4-f1ed-4e0f-ad52-233243f6b224",
    "status": "completed",
    "created_at": "2025-07-13T01:15:43.300529",
    "pdf_source": "uploads/9dee79cc-5ced-45b0-b443-93ee108c4874_1752363261041-molecules-19-19066.pdf",
    "original_filename": "1752363261041-molecules-19-19066.pdf",
    "video_name": null,
    "completed_at": "2025-07-13T01:16:11.827669",
    "video_path": "outputs/video_1924f0d4-f1ed-4e0f-ad52-233243f6b224.mp4",
    "generation_metrics": {
      "video_path": "outputs/video_1924f0d4-f1ed-4e0f-ad52-233243f6b224.mp4",
      "total_clips": 4,
      "successful_clips": 4,
      "failed_clips": 0,
      "success_rate": 1.0,
      "pdf_path": "uploads/9dee79cc-5ced-45b0-b443-93ee108c4874_1752363261041-molecules-19-19066.pdf",
      "clips_config": [
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('BPC 157: A Novel Healing Peptide', font_size=48).to_edge(UP)\n        circle = Circle(radius=1.5, color=BLUE)\n        text = Text('Damaged Tendon', font_size=36).next_to(circle, DOWN)\n        self.play(Write(title))\n        self.wait(1)\n        self.play(Create(circle))\n        self.play(FadeIn(text))\n        self.wait(1)",
          "voice_over": "Tendon injuries are notoriously difficult to heal. Scientists have discovered a promising peptide called BPC 157 that could change how we treat these injuries."
        },
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('Growth Hormone Receptor Enhancement', font_size=48).to_edge(UP)\n        receptor = Square(side_length=2, color=GREEN)\n        arrow = Arrow(start=LEFT*3, end=RIGHT*3, color=WHITE)\n        self.play(Write(title))\n        self.wait(1)\n        self.play(Create(receptor))\n        self.play(Create(arrow))\n        self.wait(1)",
          "voice_over": "BPC 157 works by enhancing growth hormone receptors in tendon cells. This unique mechanism increases the cell's ability to respond to healing signals."
        },
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('Cellular Response', font_size=48).to_edge(UP)\n        cell = Circle(radius=1, color=BLUE)\n        arrows = VGroup(*[Arrow(ORIGIN, angle*RIGHT+UP) for angle in [-1, 0, 1]])\n        self.play(Write(title))\n        self.wait(1)\n        self.play(Create(cell))\n        self.play(Create(arrows))\n        self.wait(1)",
          "voice_over": "When these receptors are activated, tendon cells begin to multiply and migrate to the injured area, accelerating the natural healing process."
        },
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('Improved Healing Outcomes', font_size=48).to_edge(UP)\n        rect = Rectangle(height=2, width=3, color=GREEN)\n        text = Text('Faster Recovery', font_size=36).next_to(rect, DOWN)\n        self.play(Write(title))\n        self.wait(1)\n        self.play(Create(rect))\n        self.play(FadeIn(text))\n        self.wait(1)",
          "voice_over": "This enhanced healing response leads to faster recovery times and stronger tissue repair, potentially revolutionizing how we treat tendon injuries."
        }
      ]
    }
  },
  "56bd2d51-4812-41a5-9106-4a6fd592c5fb": {
    "job_id": "56bd2d51-4812-41a5-9106-4a6fd592c5fb",
    "status": "completed",
    "created_at": "2025-07-13T01:19:34.113748",
    "pdf_source": "uploads/e370f6c9-00a2-4b6d-857c-d49d62ae555c_1752363261041-molecules-19-19066.pdf",
    "original_filename": "1752363261041-molecules-19-19066.pdf",
    "video_name": null,
    "completed_at": "2025-07-13T01:20:03.757153",
    "video_path": "outputs/video_56bd2d51-4812-41a5-9106-4a6fd592c5fb.mp4",
    "generation_metrics": {
      "video_path": "outputs/video_56bd2d51-4812-41a5-9106-4a6fd592c5fb.mp4",
      "total_clips": 4,
      "successful_clips": 4,
      "failed_clips": 0,
      "success_rate": 1.0,
      "pdf_path": "uploads/e370f6c9-00a2-4b6d-857c-d49d62ae555c_1752363261041-molecules-19-19066.pdf",
      "clips_config": [
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('BPC 157: A Healing Peptide', font_size=48).to_edge(UP)\n        subtitle = Text('A peptide that helps heal tendons', font_size=36).shift(DOWN*0.5)\n        self.play(Write(title))\n        self.wait(1)\n        self.play(FadeIn(subtitle))\n        self.wait(2)",
          "voice_over": "BPC 157 is a unique peptide derived from human gastric juice that shows remarkable healing properties, particularly for tendons and other tissues."
        },
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('Growth Hormone Receptor Enhancement', font_size=48).to_edge(UP)\n        receptor = Circle(radius=1, color=BLUE).move_to(ORIGIN)\n        arrow = Arrow(start=LEFT*2, end=RIGHT*2, color=GREEN)\n        self.play(Write(title))\n        self.wait(1)\n        self.play(Create(receptor), Create(arrow))\n        self.wait(2)",
          "voice_over": "BPC 157 works by increasing growth hormone receptors on tendon cells, creating more binding sites for natural healing signals."
        },
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('Activation Mechanism', font_size=48).to_edge(UP)\n        cell = Square(side_length=2, color=BLUE).move_to(ORIGIN)\n        dots = VGroup(*[Dot(color=RED) for _ in range(5)]).arrange(RIGHT).move_to(ORIGIN)\n        self.play(Write(title))\n        self.wait(1)\n        self.play(Create(cell), Create(dots))\n        self.wait(2)",
          "voice_over": "When growth hormone binds to these enhanced receptors, it triggers a cascade of healing responses in the tendon cells."
        },
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('Improved Healing Response', font_size=48).to_edge(UP)\n        before = Rectangle(height=2, width=1, color=RED).shift(LEFT*2)\n        after = Rectangle(height=2, width=1, color=GREEN).shift(RIGHT*2)\n        self.play(Write(title))\n        self.wait(1)\n        self.play(Create(before), Create(after))\n        self.wait(2)",
          "voice_over": "This enhanced receptor expression leads to faster healing and stronger tissue repair, potentially revolutionizing tendon injury treatment."
        }
      ]
    }
  },
  "bdad55ce-9696-43a3-b2c6-ab9aba60f6e6": {
    "job_id": "bdad55ce-9696-43a3-b2c6-ab9aba60f6e6",
    "status": "completed",
    "created_at": "2025-07-13T01:21:52.561236",
    "pdf_source": "uploads/5d153461-d9a2-493f-8137-9b3a018a7d7a_1752363261041-molecules-19-19066.pdf",
    "original_filename": "1752363261041-molecules-19-19066.pdf",
    "video_name": null,
    "completed_at": "2025-07-13T01:22:21.691761",
    "video_path": "outputs/video_bdad55ce-9696-43a3-b2c6-ab9aba60f6e6.mp4",
    "generation_metrics": {
      "video_path": "outputs/video_bdad55ce-9696-43a3-b2c6-ab9aba60f6e6.mp4",
      "total_clips": 4,
      "successful_clips": 4,
      "failed_clips": 0,
      "success_rate": 1.0,
      "pdf_path": "uploads/5d153461-d9a2-493f-8137-9b3a018a7d7a_1752363261041-molecules-19-19066.pdf",
      "clips_config": [
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('BPC 157: A Healing Peptide', font_size=48).to_edge(UP)\n        subtitle = Text('A compound found in gastric juice', font_size=36).shift(DOWN*0.5)\n        self.play(Write(title))\n        self.wait(1)\n        self.play(FadeIn(subtitle))\n        self.wait(2)",
          "voice_over": "BPC 157 is a remarkable peptide discovered in human gastric juice that shows promising healing properties across multiple tissues."
        },
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('Growth Hormone Receptor Enhancement', font_size=48).to_edge(UP)\n        circle = Circle(radius=1.5, color=BLUE)\n        arrow = Arrow(start=LEFT*2, end=RIGHT*2, color=WHITE)\n        self.play(Write(title))\n        self.wait(1)\n        self.play(Create(circle), Create(arrow))\n        self.wait(2)",
          "voice_over": "BPC 157 works by increasing growth hormone receptors on tendon cells, amplifying the body's natural healing signals."
        },
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('Cellular Response', font_size=48).to_edge(UP)\n        rect1 = Rectangle(height=1, width=1, color=GREEN).shift(LEFT*2)\n        rect2 = Rectangle(height=2, width=1, color=GREEN).shift(RIGHT*2)\n        arrow = Arrow(start=LEFT, end=RIGHT, color=WHITE)\n        self.play(Write(title))\n        self.wait(1)\n        self.play(Create(rect1), Create(arrow), Create(rect2))\n        self.wait(2)",
          "voice_over": "When treated with BPC 157, tendon cells become more responsive to growth hormone, leading to increased cell growth and repair."
        },
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('Healing Potential', font_size=48).to_edge(UP)\n        text = Text('Faster Tissue Recovery', font_size=36).shift(DOWN*0.5)\n        circle = Circle(radius=1, color=BLUE, fill_opacity=0.3)\n        self.play(Write(title))\n        self.wait(1)\n        self.play(FadeIn(text), Create(circle))\n        self.wait(2)",
          "voice_over": "This enhanced healing mechanism could revolutionize treatment for tendon injuries, potentially leading to faster and more complete recovery."
        }
      ]
    }
  },
  "441aa2e3-0823-49bf-a6ba-fd1cad822aea": {
    "job_id": "441aa2e3-0823-49bf-a6ba-fd1cad822aea",
    "status": "completed",
    "created_at": "2025-07-13T01:25:17.199328",
    "pdf_source": "uploads/54fdb7ed-8c6f-452e-8b37-6a067a74090a_research_paper_1.pdf",
    "original_filename": "research_paper_1.pdf",
    "video_name": null,
    "completed_at": "2025-07-13T01:25:44.101131",
    "video_path": "outputs/video_441aa2e3-0823-49bf-a6ba-fd1cad822aea.mp4",
    "generation_metrics": {
      "video_path": "outputs/video_441aa2e3-0823-49bf-a6ba-fd1cad822aea.mp4",
      "total_clips": 4,
      "successful_clips": 4,
      "failed_clips": 0,
      "success_rate": 1.0,
      "pdf_path": "uploads/54fdb7ed-8c6f-452e-8b37-6a067a74090a_research_paper_1.pdf",
      "clips_config": [
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('Artificial Intelligence', font_size=48).to_edge(UP)\n        subtitle = Text('Making Computers Think Like Humans', font_size=36).shift(DOWN*0.5)\n        self.play(Write(title))\n        self.wait(1)\n        self.play(FadeIn(subtitle))\n        self.wait(2)",
          "voice_over": "Artificial Intelligence is an ambitious field that aims to create computers that can think and behave like humans. But how close are we to achieving this goal?"
        },
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('Core AI Components', font_size=48).to_edge(UP)\n        circle1 = Circle(radius=0.8, color=BLUE).shift(LEFT*2)\n        circle2 = Circle(radius=0.8, color=BLUE).shift(RIGHT*2)\n        labels = VGroup(\n            Text('Logic', font_size=32).next_to(circle1, DOWN),\n            Text('Learning', font_size=32).next_to(circle2, DOWN)\n        )\n        self.play(Write(title))\n        self.play(Create(circle1), Create(circle2))\n        self.play(Write(labels))\n        self.wait(1)",
          "voice_over": "AI systems combine logical reasoning with the ability to learn from data. These two fundamental capabilities work together to solve complex problems."
        },
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('How AI Works', font_size=48).to_edge(UP)\n        rect = Rectangle(height=2, width=3, color=GREEN)\n        arrows = VGroup(\n            Arrow(start=LEFT*3, end=rect.get_left(), color=GREEN),\n            Arrow(start=rect.get_right(), end=RIGHT*3, color=GREEN)\n        )\n        labels = VGroup(\n            Text('Input', font_size=32).next_to(arrows[0], UP),\n            Text('Output', font_size=32).next_to(arrows[1], UP)\n        )\n        self.play(Write(title))\n        self.play(Create(rect))\n        self.play(Create(arrows), Write(labels))\n        self.wait(1)",
          "voice_over": "At its core, AI processes input data through complex algorithms to produce intelligent outputs. The system learns to improve its responses over time."
        },
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('Current State of AI', font_size=48).to_edge(UP)\n        dot = Dot(radius=0.3, color=YELLOW).shift(LEFT*2)\n        line = Line(LEFT*2, RIGHT*2, color=YELLOW)\n        target = Dot(radius=0.3, color=RED).shift(RIGHT*2)\n        self.play(Write(title))\n        self.play(Create(line), Create(target))\n        self.play(Create(dot))\n        self.wait(1)",
          "voice_over": "While AI has made remarkable progress in specific tasks like game playing and pattern recognition, we're still far from achieving human-level artificial general intelligence."
        }
      ]
    }
  },
  "dfc8b9cc-f682-4dce-883b-b0f4fbf1736a": {
    "job_id": "dfc8b9cc-f682-4dce-883b-b0f4fbf1736a",
    "status": "completed",
    "created_at": "2025-07-13T02:10:59.398285",
    "pdf_source": "uploads/5326d9af-d145-44b4-9758-b009f1032a08_research_paper_1.pdf",
    "original_filename": "research_paper_1.pdf",
    "video_name": null,
    "completed_at": "2025-07-13T02:11:23.525933",
    "video_path": "outputs/video_dfc8b9cc-f682-4dce-883b-b0f4fbf1736a.mp4",
    "generation_metrics": {
      "video_path": "outputs/video_dfc8b9cc-f682-4dce-883b-b0f4fbf1736a.mp4",
      "total_clips": 4,
      "successful_clips": 4,
      "failed_clips": 0,
      "success_rate": 1.0,
      "pdf_path": "uploads/5326d9af-d145-44b4-9758-b009f1032a08_research_paper_1.pdf",
      "clips_config": [
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('Artificial Intelligence Basics', font_size=48).to_edge(UP)\n        subtitle = Text('Making Computers Think Like Humans', font_size=36).move_to(ORIGIN)\n        self.play(Write(title))\n        self.wait(1)\n        self.play(FadeIn(subtitle))\n        self.wait(1)",
          "voice_over": "Artificial Intelligence is the science of making computers behave like humans. It's one of the most transformative technologies of our time."
        },
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('Key AI Components', font_size=48).to_edge(UP)\n        brain = Circle(radius=1.5, color=BLUE)\n        nodes = VGroup(*[Dot() for _ in range(6)]).arrange_in_grid(2,3)\n        nodes.move_to(brain)\n        self.play(Write(title))\n        self.play(Create(brain), Create(nodes))\n        self.wait(1)",
          "voice_over": "AI systems use neural networks that process information similar to the human brain, enabling them to learn and adapt."
        },
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('How AI Works', font_size=48).to_edge(UP)\n        input_box = Square(color=BLUE, side_length=1).shift(LEFT*2)\n        output_box = Square(color=GREEN, side_length=1).shift(RIGHT*2)\n        arrow = Arrow(input_box.get_right(), output_box.get_left())\n        self.play(Write(title))\n        self.play(Create(input_box), Create(arrow), Create(output_box))\n        self.wait(1)",
          "voice_over": "AI takes input data, processes it through complex algorithms, and produces intelligent outputs based on patterns it has learned."
        },
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('Current AI Capabilities', font_size=48).to_edge(UP)\n        text = Text('Games \u2022 Language \u2022 Vision', font_size=36).move_to(ORIGIN)\n        box = Rectangle(height=2, width=4, color=BLUE).move_to(ORIGIN)\n        self.play(Write(title))\n        self.play(Create(box), Write(text))\n        self.wait(1)",
          "voice_over": "Today, AI excels in specific tasks like playing chess, processing language, and recognizing images, though full human-like intelligence remains a future goal."
        }
      ]
    }
  },
  "b3b19ae0-fbcd-4f66-8c7a-4e9093b48128": {
    "job_id": "b3b19ae0-fbcd-4f66-8c7a-4e9093b48128",
    "status": "completed",
    "created_at": "2025-07-13T02:21:03.530486",
    "pdf_source": "uploads/58e852b5-190d-4e13-a025-c2e8ef736746_research_paper_1.pdf",
    "original_filename": "research_paper_1.pdf",
    "video_name": null,
    "completed_at": "2025-07-13T02:21:29.021050",
    "video_path": "outputs/video_b3b19ae0-fbcd-4f66-8c7a-4e9093b48128.mp4",
    "generation_metrics": {
      "video_path": "outputs/video_b3b19ae0-fbcd-4f66-8c7a-4e9093b48128.mp4",
      "total_clips": 4,
      "successful_clips": 4,
      "failed_clips": 0,
      "success_rate": 1.0,
      "pdf_path": "uploads/58e852b5-190d-4e13-a025-c2e8ef736746_research_paper_1.pdf",
      "clips_config": [
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('Artificial Intelligence', font_size=48).to_edge(UP)\n        self.play(Write(title))\n        self.wait(1)\n        brain = Circle(radius=1.5, color=BLUE)\n        self.play(Create(brain))\n        circuits = Square(side_length=2.5, color=WHITE).move_to(brain)\n        self.play(Create(circuits))\n        self.wait(1)",
          "voice_over": "Artificial Intelligence is a field focused on making computers behave like humans. It represents one of the most ambitious goals in computer science."
        },
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('Core AI Components', font_size=48).to_edge(UP)\n        self.play(Write(title))\n        components = Rectangle(height=2, width=3, color=GREEN).shift(UP*0.5)\n        labels = Text('Games \u2022 Expert Systems \u2022 Neural Networks', font_size=32).next_to(components, DOWN)\n        self.play(Create(components), Write(labels))\n        self.wait(1)",
          "voice_over": "Modern AI encompasses several key areas including game playing, expert systems, and neural networks - each pushing the boundaries of machine capabilities."
        },
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('How AI Works', font_size=48).to_edge(UP)\n        self.play(Write(title))\n        input_box = Square(side_length=1, color=BLUE).shift(LEFT*2)\n        output_box = Square(side_length=1, color=BLUE).shift(RIGHT*2)\n        arrow = Arrow(input_box.get_right(), output_box.get_left(), color=WHITE)\n        self.play(Create(input_box), Create(arrow), Create(output_box))\n        self.wait(1)",
          "voice_over": "AI systems process input through complex algorithms and mathematical models to produce human-like responses and decisions."
        },
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('Current Impact', font_size=48).to_edge(UP)\n        self.play(Write(title))\n        progress = Rectangle(height=0.5, width=4, color=RED).shift(UP*0.5)\n        text = Text('Advancing but Limited', font_size=36).next_to(progress, DOWN)\n        self.play(Create(progress), Write(text))\n        self.wait(1)",
          "voice_over": "While AI has achieved remarkable successes in specific domains like chess, we're still far from achieving full human-like artificial intelligence."
        }
      ]
    }
  },
  "dbea4fe2-a6a5-45d9-a573-d4b65a256532": {
    "job_id": "dbea4fe2-a6a5-45d9-a573-d4b65a256532",
    "status": "failed",
    "created_at": "2025-07-13T02:25:28.971244",
    "pdf_source": "https://arxiv.org/pdf/2301.07041.pdf",
    "quality": "medium_quality",
    "video_name": null,
    "error": "Error code: 400 - {'type': 'error', 'error': {'type': 'invalid_request_error', 'message': 'Only HTTPS URLs are supported.'}}"
  },
  "760df2a3-c5a0-42cf-9409-1f5bd4017fc9": {
    "job_id": "760df2a3-c5a0-42cf-9409-1f5bd4017fc9",
    "status": "completed",
    "created_at": "2025-07-13T02:29:08.122923",
    "pdf_source": "uploads/329f46f2-135e-4ae4-97c9-17ed85b216f6_molecules-19-19066.pdf",
    "original_filename": "molecules-19-19066.pdf",
    "video_name": null,
    "completed_at": "2025-07-13T02:29:36.667681",
    "video_path": "outputs/video_760df2a3-c5a0-42cf-9409-1f5bd4017fc9.mp4",
    "generation_metrics": {
      "video_path": "outputs/video_760df2a3-c5a0-42cf-9409-1f5bd4017fc9.mp4",
      "total_clips": 4,
      "successful_clips": 4,
      "failed_clips": 0,
      "success_rate": 1.0,
      "pdf_path": "uploads/329f46f2-135e-4ae4-97c9-17ed85b216f6_molecules-19-19066.pdf",
      "clips_config": [
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('BPC 157 and Tendon Healing', font_size=48).to_edge(UP)\n        self.play(Write(title))\n        self.wait(1)\n        subtitle = Text('A peptide that promotes tissue repair', font_size=36).shift(DOWN)\n        self.play(FadeIn(subtitle))\n        self.wait(2)",
          "voice_over": "BPC 157 is a peptide derived from human gastric juice that shows remarkable potential in promoting tissue healing, particularly for tendon injuries."
        },
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('Growth Hormone Receptor Expression', font_size=48).to_edge(UP)\n        self.play(Write(title))\n        self.wait(1)\n        receptor = Circle(radius=1, color=BLUE).move_to(ORIGIN)\n        label = Text('GH Receptor', font_size=32).next_to(receptor, DOWN)\n        self.play(Create(receptor), FadeIn(label))\n        self.wait(2)",
          "voice_over": "BPC 157 works by increasing the expression of growth hormone receptors in tendon cells, enhancing their responsiveness to healing signals."
        },
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('Activation Mechanism', font_size=48).to_edge(UP)\n        self.play(Write(title))\n        self.wait(1)\n        arrow = Arrow(LEFT*2, RIGHT*2, color=GREEN)\n        labels = VGroup(\n            Text('BPC 157', font_size=32).next_to(arrow, LEFT),\n            Text('Cell Growth', font_size=32).next_to(arrow, RIGHT)\n        )\n        self.play(Create(arrow), FadeIn(labels))\n        self.wait(2)",
          "voice_over": "When BPC 157 increases growth hormone receptors, it enables better cell growth and tissue repair signaling in damaged tendons."
        },
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('Healing Enhancement', font_size=48).to_edge(UP)\n        self.play(Write(title))\n        self.wait(1)\n        rectangle = Rectangle(height=2, width=3, color=BLUE).move_to(ORIGIN)\n        result = Text('Faster Tendon Recovery', font_size=36).next_to(rectangle, DOWN)\n        self.play(Create(rectangle), FadeIn(result))\n        self.wait(2)",
          "voice_over": "This enhanced receptor expression leads to more effective tendon healing, potentially offering a new therapeutic approach for tendon injuries."
        }
      ]
    }
  },
  "87b668a3-bb3f-4cf4-aa80-b4113de1f1ea": {
    "job_id": "87b668a3-bb3f-4cf4-aa80-b4113de1f1ea",
    "status": "completed",
    "created_at": "2025-07-13T02:34:07.497711",
    "pdf_source": "https://www.w3.org/WAI/ER/tests/xhtml/testfiles/resources/pdf/dummy.pdf",
    "quality": "medium_quality",
    "video_name": null,
    "completed_at": "2025-07-13T02:34:34.118588",
    "video_path": "outputs/video_87b668a3-bb3f-4cf4-aa80-b4113de1f1ea.mp4",
    "generation_metrics": {
      "video_path": "outputs/video_87b668a3-bb3f-4cf4-aa80-b4113de1f1ea.mp4",
      "total_clips": 4,
      "successful_clips": 4,
      "failed_clips": 0,
      "success_rate": 1.0,
      "pdf_url": "https://www.w3.org/WAI/ER/tests/xhtml/testfiles/resources/pdf/dummy.pdf",
      "clips_config": [
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('Understanding Dummy Files', font_size=48).to_edge(UP)\n        self.play(Write(title))\n        self.wait(1)\n        subtitle = Text('A placeholder document format', font_size=36).shift(UP*0.5)\n        self.play(FadeIn(subtitle))\n        self.wait(2)\n        self.wait(1)",
          "voice_over": "Let's explore what dummy files are and why they're important in software development and testing."
        },
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('Structure of a Dummy File', font_size=48).to_edge(UP)\n        self.play(Write(title))\n        self.wait(1)\n        rect = Rectangle(height=2, width=3, color=BLUE).move_to(ORIGIN)\n        self.play(Create(rect))\n        text = Text('Basic Content', font_size=32).move_to(rect.get_center())\n        self.play(FadeIn(text))\n        self.wait(1)",
          "voice_over": "A dummy file contains minimal content while maintaining the correct file format and structure."
        },
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('How Dummy Files Work', font_size=48).to_edge(UP)\n        self.play(Write(title))\n        self.wait(1)\n        circle1 = Circle(radius=0.5, color=GREEN).shift(LEFT*2)\n        circle2 = Circle(radius=0.5, color=GREEN).shift(RIGHT*2)\n        arrow = Arrow(circle1.get_right(), circle2.get_left(), color=WHITE)\n        self.play(Create(circle1), Create(arrow), Create(circle2))\n        self.wait(1)",
          "voice_over": "Dummy files act as placeholders in testing environments, simulating real files without unnecessary complexity."
        },
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('Benefits of Dummy Files', font_size=48).to_edge(UP)\n        self.play(Write(title))\n        self.wait(1)\n        check1 = Square(side_length=0.5, color=BLUE).shift(UP*0.5)\n        check2 = Square(side_length=0.5, color=BLUE).shift(DOWN*0.5)\n        self.play(Create(check1), Create(check2))\n        self.wait(2)\n        self.wait(1)",
          "voice_over": "Using dummy files speeds up testing processes and reduces storage requirements while maintaining functionality."
        }
      ]
    }
  },
  "bdf59e38-b82a-4f7e-a6df-fd3a32ffd47b": {
    "job_id": "bdf59e38-b82a-4f7e-a6df-fd3a32ffd47b",
    "status": "completed",
    "created_at": "2025-07-13T02:43:35.139889",
    "pdf_source": "https://www.w3.org/WAI/ER/tests/xhtml/testfiles/resources/pdf/dummy.pdf",
    "quality": "medium_quality",
    "video_name": null,
    "completed_at": "2025-07-13T02:44:17.723287",
    "video_path": "outputs/video_bdf59e38-b82a-4f7e-a6df-fd3a32ffd47b.mp4",
    "generation_metrics": {
      "video_path": "outputs/video_bdf59e38-b82a-4f7e-a6df-fd3a32ffd47b.mp4",
      "total_clips": 4,
      "successful_clips": 4,
      "failed_clips": 0,
      "success_rate": 1.0,
      "pdf_url": "https://www.w3.org/WAI/ER/tests/xhtml/testfiles/resources/pdf/dummy.pdf",
      "clips_config": [
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('Dummy PDF Files', font_size=48).to_edge(UP)\n        self.play(Write(title))\n        self.wait(1)\n        subtitle = Text('A simple placeholder document format', font_size=36).shift(UP*0.5)\n        self.play(FadeIn(subtitle))\n        self.wait(8)\n        self.wait(1)",
          "voice_over": "Dummy PDF files are simple placeholder documents used in testing and development. They help demonstrate how PDF handling works without using real sensitive data."
        },
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('Basic Structure', font_size=48).to_edge(UP)\n        self.play(Write(title))\n        self.wait(1)\n        rect = Rectangle(height=3, width=2, color=BLUE)\n        text = Text('PDF', font_size=32).move_to(rect)\n        self.play(Create(rect), Write(text))\n        self.wait(8)\n        self.wait(1)",
          "voice_over": "A dummy PDF contains the basic structure of a PDF file - headers, body text, and formatting information - but with minimal actual content."
        },
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('How It Works', font_size=48).to_edge(UP)\n        self.play(Write(title))\n        self.wait(1)\n        circle1 = Circle(radius=0.5, color=GREEN).shift(LEFT*2)\n        circle2 = Circle(radius=0.5, color=GREEN).shift(RIGHT*2)\n        arrow = Arrow(circle1.get_right(), circle2.get_left(), color=GREEN)\n        self.play(Create(circle1), Create(arrow), Create(circle2))\n        self.wait(8)\n        self.wait(1)",
          "voice_over": "When testing PDF systems, dummy files allow developers to verify functionality without processing large or complex documents. The system treats them just like real PDFs."
        },
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('Benefits', font_size=48).to_edge(UP)\n        self.play(Write(title))\n        self.wait(1)\n        square = Square(side_length=2, color=BLUE)\n        checkmark = Text('\u2713', font_size=64, color=GREEN).move_to(square)\n        self.play(Create(square), Write(checkmark))\n        self.wait(8)\n        self.wait(1)",
          "voice_over": "Using dummy PDFs ensures safe testing, faster development, and reliable validation of PDF processing systems without risking real document security."
        }
      ]
    }
  },
  "16032b70-4762-4ae7-9911-9f4ccec54532": {
    "job_id": "16032b70-4762-4ae7-9911-9f4ccec54532",
    "status": "completed",
    "created_at": "2025-07-13T02:46:34.209188",
    "pdf_source": "uploads/5933afcf-5257-428f-8ec4-3efd7d33aa65_molecules-19-19066.pdf",
    "original_filename": "molecules-19-19066.pdf",
    "video_name": null,
    "completed_at": "2025-07-13T02:47:12.663034",
    "video_path": "outputs/video_16032b70-4762-4ae7-9911-9f4ccec54532.mp4",
    "generation_metrics": {
      "video_path": "outputs/video_16032b70-4762-4ae7-9911-9f4ccec54532.mp4",
      "total_clips": 4,
      "successful_clips": 4,
      "failed_clips": 0,
      "success_rate": 1.0,
      "pdf_path": "uploads/5933afcf-5257-428f-8ec4-3efd7d33aa65_molecules-19-19066.pdf",
      "clips_config": [
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('BPC 157: A Novel Healing Peptide', font_size=48).to_edge(UP)\n        subtitle = Text('Discovered in gastric juice', font_size=36).move_to(ORIGIN)\n        self.play(Write(title))\n        self.wait(1)\n        self.play(FadeIn(subtitle))\n        self.wait(2)",
          "voice_over": "BPC 157 is a remarkable peptide discovered in human gastric juice that shows promising healing properties across multiple tissues."
        },
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('Growth Hormone Receptor Enhancement', font_size=48).to_edge(UP)\n        circle = Circle(radius=1.5, color=BLUE).move_to(ORIGIN)\n        arrow = Arrow(start=LEFT, end=RIGHT, color=WHITE).next_to(circle, RIGHT)\n        self.play(Write(title))\n        self.wait(1)\n        self.play(Create(circle), Create(arrow))\n        self.wait(2)",
          "voice_over": "The peptide works by enhancing growth hormone receptors in tendon cells, creating a stronger response to natural healing signals."
        },
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('Cellular Mechanism', font_size=48).to_edge(UP)\n        rect1 = Rectangle(height=1, width=2, color=GREEN).shift(LEFT*2)\n        rect2 = Rectangle(height=1, width=2, color=GREEN).shift(RIGHT*2)\n        arrow = Arrow(start=rect1.get_right(), end=rect2.get_left(), color=WHITE)\n        self.play(Write(title))\n        self.wait(1)\n        self.play(Create(rect1), Create(arrow), Create(rect2))\n        self.wait(2)",
          "voice_over": "When BPC 157 is present, cells become more responsive to growth hormone, activating healing pathways more effectively."
        },
        {
          "type": "manim",
          "code": "class SimpleScene(Scene):\n    def construct(self):\n        title = Text('Accelerated Tissue Healing', font_size=48).to_edge(UP)\n        result = Text('Faster Recovery', font_size=36).move_to(ORIGIN)\n        line = Line(start=LEFT*2, end=RIGHT*2, color=BLUE).shift(DOWN)\n        self.play(Write(title))\n        self.wait(1)\n        self.play(Write(result), Create(line))\n        self.wait(2)",
          "voice_over": "This enhanced healing response leads to faster recovery times and more complete tissue repair, offering new possibilities for treatment."
        }
      ]
    }
  }
}